{"get": {"Wmdirect": {"Compartment": {"Amount": {"@doc": [{"@code": "val = sim.comp.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.comp.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Conc": {"@doc": [{"@code": "conc = sim.comp.Conc", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.comp.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Reaction": {"A": {"@doc": [{"@code": "val = sim.comp.reac['fwd'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "val = sim.comp.reac['bkw'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Active": {"@doc": [{"@code": "active = sim.comp.reac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "active = sim.comp.reac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "C": {"@doc": [{"@code": "val = sim.comp.reac['fwd'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "val = sim.comp.reac['bkw'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Extent": {"@doc": [{"@code": "val = sim.comp.reac['fwd'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "val = sim.comp.reac['bkw'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "H": {"@doc": [{"@code": "val = sim.comp.reac['fwd'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "val = sim.comp.reac['bkw'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "K": {"@doc": [{"@code": "val = sim.comp.reac['fwd'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "val = sim.comp.reac['bkw'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "val = sim.comp.spec.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.comp.spec.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Conc": {"@doc": [{"@code": "conc = sim.comp.spec.Conc", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.comp.spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Vol": {"@doc": [{"@code": "val = sim.comp.Vol", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Vol\">volume</a> (in m\u00b3) of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Patch": {"Amount": {"@doc": [{"@code": "val = sim.patch.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Area": {"@doc": [{"@code": "val = sim.patch.Area", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Area\">area</a> (in m\u00b2) of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.patch.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.patch.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Reaction": {"A": {"@doc": [{"@code": "val = sim.patch.sreac['fwd'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "val = sim.patch.sreac['bkw'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Active": {"@doc": [{"@code": "active = sim.patch.sreac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "active = sim.patch.sreac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "active = sim.patch.reac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "active = sim.patch.reac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "C": {"@doc": [{"@code": "val = sim.patch.sreac['fwd'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "val = sim.patch.sreac['bkw'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Extent": {"@doc": [{"@code": "val = sim.patch.sreac['fwd'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "val = sim.patch.sreac['bkw'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "H": {"@doc": [{"@code": "val = sim.patch.sreac['fwd'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "val = sim.patch.sreac['bkw'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "K": {"@doc": [{"@code": "val = sim.patch.sreac['fwd'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "val = sim.patch.sreac['bkw'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "val = sim.patch.spec.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.patch.spec.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.patch.spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}}}}, "Wmrssa": {"Compartment": {"Amount": {"@doc": [{"@code": "val = sim.comp.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.comp.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Conc": {"@doc": [{"@code": "conc = sim.comp.Conc", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.comp.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Reaction": {"A": {"@doc": [{"@code": "val = sim.comp.reac['fwd'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "val = sim.comp.reac['bkw'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Active": {"@doc": [{"@code": "active = sim.comp.reac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "active = sim.comp.reac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "C": {"@doc": [{"@code": "val = sim.comp.reac['fwd'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "val = sim.comp.reac['bkw'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Extent": {"@doc": [{"@code": "val = sim.comp.reac['fwd'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "val = sim.comp.reac['bkw'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "H": {"@doc": [{"@code": "val = sim.comp.reac['fwd'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "val = sim.comp.reac['bkw'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "K": {"@doc": [{"@code": "val = sim.comp.reac['fwd'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "val = sim.comp.reac['bkw'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "val = sim.comp.spec.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.comp.spec.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Conc": {"@doc": [{"@code": "conc = sim.comp.spec.Conc", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.comp.spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Vol": {"@doc": [{"@code": "val = sim.comp.Vol", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Vol\">volume</a> (in m\u00b3) of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Patch": {"Amount": {"@doc": [{"@code": "val = sim.patch.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Area": {"@doc": [{"@code": "val = sim.patch.Area", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Area\">area</a> (in m\u00b2) of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.patch.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.patch.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Reaction": {"A": {"@doc": [{"@code": "val = sim.patch.sreac['fwd'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "val = sim.patch.sreac['bkw'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Active": {"@doc": [{"@code": "active = sim.patch.sreac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "active = sim.patch.sreac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "active = sim.patch.reac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "active = sim.patch.reac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "C": {"@doc": [{"@code": "val = sim.patch.sreac['fwd'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "val = sim.patch.sreac['bkw'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Extent": {"@doc": [{"@code": "val = sim.patch.sreac['fwd'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "val = sim.patch.sreac['bkw'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "H": {"@doc": [{"@code": "val = sim.patch.sreac['fwd'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "val = sim.patch.sreac['bkw'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "K": {"@doc": [{"@code": "val = sim.patch.sreac['fwd'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "val = sim.patch.sreac['bkw'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "val = sim.patch.spec.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.patch.spec.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.patch.spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}}}}, "Wmrk4": {"Compartment": {"Amount": {"@doc": [{"@code": "val = sim.comp.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.comp.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Conc": {"@doc": [{"@code": "conc = sim.comp.Conc", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.comp.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Reaction": {"A": {"@doc": [{"@code": "val = sim.comp.reac['fwd'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "val = sim.comp.reac['bkw'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Active": {"@doc": [{"@code": "active = sim.comp.reac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "active = sim.comp.reac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "C": {"@doc": [{"@code": "val = sim.comp.reac['fwd'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "val = sim.comp.reac['bkw'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Extent": {"@doc": [{"@code": "val = sim.comp.reac['fwd'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "val = sim.comp.reac['bkw'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "H": {"@doc": [{"@code": "val = sim.comp.reac['fwd'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "val = sim.comp.reac['bkw'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "K": {"@doc": [{"@code": "val = sim.comp.reac['fwd'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "val = sim.comp.reac['bkw'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "val = sim.comp.spec.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.comp.spec.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Conc": {"@doc": [{"@code": "conc = sim.comp.spec.Conc", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.comp.spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Vol": {"@doc": [{"@code": "val = sim.comp.Vol", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Vol\">volume</a> (in m\u00b3) of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Patch": {"Amount": {"@doc": [{"@code": "val = sim.patch.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Area": {"@doc": [{"@code": "val = sim.patch.Area", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Area\">area</a> (in m\u00b2) of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.patch.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.patch.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Reaction": {"A": {"@doc": [{"@code": "val = sim.patch.sreac['fwd'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "val = sim.patch.sreac['bkw'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Active": {"@doc": [{"@code": "active = sim.patch.sreac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "active = sim.patch.sreac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "active = sim.patch.reac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "active = sim.patch.reac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "C": {"@doc": [{"@code": "val = sim.patch.sreac['fwd'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "val = sim.patch.sreac['bkw'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Extent": {"@doc": [{"@code": "val = sim.patch.sreac['fwd'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "val = sim.patch.sreac['bkw'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "H": {"@doc": [{"@code": "val = sim.patch.sreac['fwd'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "val = sim.patch.sreac['bkw'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "K": {"@doc": [{"@code": "val = sim.patch.sreac['fwd'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "val = sim.patch.sreac['bkw'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "val = sim.patch.spec.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.patch.spec.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.patch.spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}}}}, "Tetexact": {"Compartment": {"Amount": {"@doc": [{"@code": "val = sim.comp.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.comp.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Conc": {"@doc": [{"@code": "conc = sim.comp.Conc", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.comp.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Diffusion": {"Active": {"@doc": [{"@code": "active = sim.comp.diff.Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "D": {"@doc": [{"@code": "dcst = sim.comp.diff.D", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Reaction": {"A": {"@doc": [{"@code": "val = sim.comp.reac['fwd'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "val = sim.comp.reac['bkw'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Active": {"@doc": [{"@code": "active = sim.comp.reac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "active = sim.comp.reac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "C": {"@doc": [{"@code": "val = sim.comp.reac['fwd'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "val = sim.comp.reac['bkw'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Extent": {"@doc": [{"@code": "val = sim.comp.reac['fwd'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "val = sim.comp.reac['bkw'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "H": {"@doc": [{"@code": "val = sim.comp.reac['fwd'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "val = sim.comp.reac['bkw'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "K": {"@doc": [{"@code": "val = sim.comp.reac['fwd'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "val = sim.comp.reac['bkw'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "val = sim.comp.spec.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.comp.spec.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Conc": {"@doc": [{"@code": "conc = sim.comp.spec.Conc", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.comp.spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Vol": {"@doc": [{"@code": "val = sim.comp.Vol", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Vol\">volume</a> (in m\u00b3) of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Diff. Boundary": {"DiffusionActive": {"@doc": [{"@code": "val = sim.diffb.DiffusionActive", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.DiffusionActive\">diffusion active status</a> of <a href=\"API_geom.html#steps.API_2.geom.DiffBoundary\">DiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}, "Species": {"DiffusionActive": {"@doc": [{"@code": "val = sim.diffb.spec.DiffusionActive", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.DiffusionActive\">diffusion active status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.DiffBoundary\">DiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}}}, "Membrane": {"Res": {"@doc": [{"@code": "ro, vrev = sim.memb.Res", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Res\">electrical resistivity</a> of <a href=\"API_geom.html#steps.API_2.geom.Membrane\">Membrane</a> <code class=\"py py-class\">memb</code>. "}]}}, "Patch": {"Amount": {"@doc": [{"@code": "val = sim.patch.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Area": {"@doc": [{"@code": "val = sim.patch.Area", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Area\">area</a> (in m\u00b2) of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.patch.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.patch.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Reaction": {"A": {"@doc": [{"@code": "val = sim.patch.sreac['fwd'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "val = sim.patch.sreac['bkw'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Active": {"@doc": [{"@code": "active = sim.patch.sreac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "active = sim.patch.sreac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "active = sim.patch.reac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "active = sim.patch.reac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "C": {"@doc": [{"@code": "val = sim.patch.sreac['fwd'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "val = sim.patch.sreac['bkw'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Extent": {"@doc": [{"@code": "val = sim.patch.sreac['fwd'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "val = sim.patch.sreac['bkw'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "H": {"@doc": [{"@code": "val = sim.patch.sreac['fwd'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "val = sim.patch.sreac['bkw'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "K": {"@doc": [{"@code": "val = sim.patch.sreac['fwd'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "val = sim.patch.sreac['bkw'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "val = sim.patch.spec.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.patch.spec.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.patch.spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}}}, "Region of Interest": {"Amount": {"@doc": [{"@code": "val = sim.roi.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Area": {"@doc": [{"@code": "val = sim.roi.Area", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Area\">area</a> (in m\u00b2) of <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Conc": {"@doc": [{"@code": "conc = sim.roi.Conc", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.roi.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Diffusion": {"Extent": {"@doc": [{"@code": "val = sim.roi.diff.Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}}, "Reaction": {"Extent": {"@doc": [{"@code": "val = sim.roi.reac['fwd'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}, {"@code": "val = sim.roi.reac['bkw'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}, {"@code": "val = sim.roi.sreac['fwd'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}, {"@code": "val = sim.roi.sreac['bkw'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "val = sim.roi.spec.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Conc": {"@doc": [{"@code": "conc = sim.roi.spec.Conc", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.roi.spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}}, "Vol": {"@doc": [{"@code": "val = sim.roi.Vol", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Vol\">volume</a> (in m\u00b3) of <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}}, "Surf. Diff. Boundary": {"DiffusionActive": {"@doc": [{"@code": "val = sim.sdiffb.DiffusionActive", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.DiffusionActive\">diffusion active status</a> of <a href=\"API_geom.html#steps.API_2.geom.SDiffBoundary\">SDiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}, "Species": {"DiffusionActive": {"@doc": [{"@code": "val = sim.sdiffb.spec.DiffusionActive", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.DiffusionActive\">diffusion active status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.SDiffBoundary\">SDiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}}}, "Tetrahedron": {"Amount": {"@doc": [{"@code": "val = sim.TET(tet).Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TETS(tetLst).Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.TET(tet).Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "clamped = sim.TETS(tetLst).Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Conc": {"@doc": [{"@code": "conc = sim.TET(tet).Conc", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "conc = sim.TETS(tetLst).Conc", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.TET(tet).Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "cnt = sim.TETS(tetLst).Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Diffusion": {"A": {"@doc": [{"@code": "val = sim.TET(tet).diff.A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TETS(tetLst).diff.A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Active": {"@doc": [{"@code": "active = sim.TET(tet).diff.Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "active = sim.TETS(tetLst).diff.Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "D": {"@doc": [{"@code": "dcst = sim.TET(tet).diff.D", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "dcst = sim.TET(tet).diff(direc=tet2).D", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> diff towards <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet2</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "dcst = sim.TETS(tetLst).diff.D", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}}, "Reaction": {"A": {"@doc": [{"@code": "val = sim.TET(tet).reac['fwd'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TET(tet).reac['bkw'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TETS(tetLst).reac['fwd'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}, {"@code": "val = sim.TETS(tetLst).reac['bkw'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Active": {"@doc": [{"@code": "active = sim.TET(tet).reac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "active = sim.TET(tet).reac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "active = sim.TETS(tetLst).reac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}, {"@code": "active = sim.TETS(tetLst).reac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "C": {"@doc": [{"@code": "val = sim.TET(tet).reac['fwd'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TET(tet).reac['bkw'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TETS(tetLst).reac['fwd'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}, {"@code": "val = sim.TETS(tetLst).reac['bkw'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "H": {"@doc": [{"@code": "val = sim.TET(tet).reac['fwd'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TET(tet).reac['bkw'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TETS(tetLst).reac['fwd'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}, {"@code": "val = sim.TETS(tetLst).reac['bkw'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "K": {"@doc": [{"@code": "val = sim.TET(tet).reac['fwd'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TET(tet).reac['bkw'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TETS(tetLst).reac['fwd'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}, {"@code": "val = sim.TETS(tetLst).reac['bkw'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "val = sim.TET(tet).spec.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TETS(tetLst).spec.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.TET(tet).spec.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "clamped = sim.TETS(tetLst).spec.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Conc": {"@doc": [{"@code": "conc = sim.TET(tet).spec.Conc", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "conc = sim.TETS(tetLst).spec.Conc", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.TET(tet).spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "cnt = sim.TETS(tetLst).spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}}, "V": {"@doc": [{"@code": "val = sim.TET(tet).V", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TETS(tetLst).V", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "VClamped": {"@doc": [{"@code": "clamped = sim.TET(tet).VClamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "clamped = sim.TETS(tetLst).VClamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Vol": {"@doc": [{"@code": "val = sim.TET(tet).Vol", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Vol\">volume</a> (in m\u00b3) of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TETS(tetLst).Vol", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Vol\">volume</a> (in m\u00b3) of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}}, "Triangle": {"Amount": {"@doc": [{"@code": "val = sim.TRI(tri).Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Area": {"@doc": [{"@code": "val = sim.TRI(tri).Area", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Area\">area</a> (in m\u00b2) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).Area", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Area\">area</a> (in m\u00b2) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.TRI(tri).Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "clamped = sim.TRIS(triLst).Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.TRI(tri).Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "cnt = sim.TRIS(triLst).Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Current": {"I": {"@doc": [{"@code": "val = sim.TRI(tri).curr.I", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.I\">current</a> (in A) of <a href=\"API_model.html#steps.API_2.model.GHKCurr\">GHKCurr</a> <code class=\"py py-class\">curr</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).curr.I", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.I\">current</a> (in A) of <a href=\"API_model.html#steps.API_2.model.GHKCurr\">GHKCurr</a> <code class=\"py py-class\">curr</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "val = sim.TRI(tri).curr.I", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.I\">current</a> (in A) of <a href=\"API_model.html#steps.API_2.model.OhmicCurr\">OhmicCurr</a> <code class=\"py py-class\">curr</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).curr.I", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.I\">current</a> (in A) of <a href=\"API_model.html#steps.API_2.model.OhmicCurr\">OhmicCurr</a> <code class=\"py py-class\">curr</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "I": {"@doc": [{"@code": "val = sim.TRI(tri).I", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.I\">current</a> (in A) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).I", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.I\">current</a> (in A) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "IClamp": {"@doc": [{"@code": "val = sim.TRI(tri).IClamp", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.IClamp\">current clamp</a> (in A) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).IClamp", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.IClamp\">current clamp</a> (in A) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "SDiffD": {"@doc": [{"@code": "dcst = sim.TRI(tri).SDiffD", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.SDiffD\">surface diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "dcst = sim.TRIS(triLst).SDiffD", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.SDiffD\">surface diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Diffusion": {"D": {"@doc": [{"@code": "dcst = sim.TRI(tri).sdiff.D", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "dcst = sim.TRI(tri).sdiff(direc=tri2).D", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> diff towards <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri2</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "dcst = sim.TRIS(triLst).sdiff.D", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "Reaction": {"A": {"@doc": [{"@code": "val = sim.TRI(tri).sreac['fwd'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRI(tri).sreac['bkw'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).sreac['fwd'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "val = sim.TRIS(triLst).sreac['bkw'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Active": {"@doc": [{"@code": "active = sim.TRI(tri).sreac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "active = sim.TRI(tri).sreac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "active = sim.TRIS(triLst).sreac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "active = sim.TRIS(triLst).sreac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "active = sim.TRI(tri).reac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "active = sim.TRI(tri).reac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "active = sim.TRIS(triLst).reac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "active = sim.TRIS(triLst).reac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "C": {"@doc": [{"@code": "val = sim.TRI(tri).sreac['fwd'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRI(tri).sreac['bkw'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).sreac['fwd'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "val = sim.TRIS(triLst).sreac['bkw'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "H": {"@doc": [{"@code": "val = sim.TRI(tri).sreac['fwd'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRI(tri).sreac['bkw'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).sreac['fwd'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "val = sim.TRIS(triLst).sreac['bkw'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "K": {"@doc": [{"@code": "val = sim.TRI(tri).sreac['fwd'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRI(tri).sreac['bkw'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).sreac['fwd'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "val = sim.TRIS(triLst).sreac['bkw'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "val = sim.TRI(tri).reac['fwd'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRI(tri).reac['bkw'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).reac['fwd'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "val = sim.TRIS(triLst).reac['bkw'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "val = sim.TRI(tri).spec.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).spec.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.TRI(tri).spec.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "clamped = sim.TRIS(triLst).spec.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.TRI(tri).spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "cnt = sim.TRIS(triLst).spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "V": {"@doc": [{"@code": "val = sim.TRI(tri).V", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).V", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "VClamped": {"@doc": [{"@code": "clamped = sim.TRI(tri).VClamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "clamped = sim.TRIS(triLst).VClamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "Vertex": {"IClamp": {"@doc": [{"@code": "val = sim.VERT(vert).IClamp", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.IClamp\">current clamp</a> (in A) of <a href=\"API_geom.html#steps.API_2.geom.VertReference\">VertReference</a> <code class=\"py py-class\">vert</code>. "}, {"@code": "val = sim.VERTS(vertLst).IClamp", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.IClamp\">current clamp</a> (in A) of each vertex in <a href=\"API_geom.html#steps.API_2.geom.VertList\">VertList</a> <code class=\"py py-class\">vertLst</code>. "}]}, "V": {"@doc": [{"@code": "val = sim.VERT(vert).V", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of <a href=\"API_geom.html#steps.API_2.geom.VertReference\">VertReference</a> <code class=\"py py-class\">vert</code>. "}, {"@code": "val = sim.VERTS(vertLst).V", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of each vertex in <a href=\"API_geom.html#steps.API_2.geom.VertList\">VertList</a> <code class=\"py py-class\">vertLst</code>. "}]}, "VClamped": {"@doc": [{"@code": "clamped = sim.VERT(vert).VClamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of <a href=\"API_geom.html#steps.API_2.geom.VertReference\">VertReference</a> <code class=\"py py-class\">vert</code>. "}, {"@code": "clamped = sim.VERTS(vertLst).VClamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of each vertex in <a href=\"API_geom.html#steps.API_2.geom.VertList\">VertList</a> <code class=\"py py-class\">vertLst</code>. "}]}}}, "TetODE": {"Compartment": {"Amount": {"@doc": [{"@code": "val = sim.comp.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.comp.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Conc": {"@doc": [{"@code": "conc = sim.comp.Conc", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.comp.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Diffusion": {"Active": {"@doc": [{"@code": "active = sim.comp.diff.Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "D": {"@doc": [{"@code": "dcst = sim.comp.diff.D", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Reaction": {"A": {"@doc": [{"@code": "val = sim.comp.reac['fwd'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "val = sim.comp.reac['bkw'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Active": {"@doc": [{"@code": "active = sim.comp.reac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "active = sim.comp.reac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "C": {"@doc": [{"@code": "val = sim.comp.reac['fwd'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "val = sim.comp.reac['bkw'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Extent": {"@doc": [{"@code": "val = sim.comp.reac['fwd'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "val = sim.comp.reac['bkw'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "H": {"@doc": [{"@code": "val = sim.comp.reac['fwd'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "val = sim.comp.reac['bkw'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "K": {"@doc": [{"@code": "val = sim.comp.reac['fwd'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "val = sim.comp.reac['bkw'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "val = sim.comp.spec.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.comp.spec.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Conc": {"@doc": [{"@code": "conc = sim.comp.spec.Conc", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.comp.spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Vol": {"@doc": [{"@code": "val = sim.comp.Vol", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Vol\">volume</a> (in m\u00b3) of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Diff. Boundary": {"DiffusionActive": {"@doc": [{"@code": "val = sim.diffb.DiffusionActive", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.DiffusionActive\">diffusion active status</a> of <a href=\"API_geom.html#steps.API_2.geom.DiffBoundary\">DiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}, "Species": {"DiffusionActive": {"@doc": [{"@code": "val = sim.diffb.spec.DiffusionActive", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.DiffusionActive\">diffusion active status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.DiffBoundary\">DiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}}}, "Membrane": {"Res": {"@doc": [{"@code": "ro, vrev = sim.memb.Res", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Res\">electrical resistivity</a> of <a href=\"API_geom.html#steps.API_2.geom.Membrane\">Membrane</a> <code class=\"py py-class\">memb</code>. "}]}}, "Patch": {"Amount": {"@doc": [{"@code": "val = sim.patch.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Area": {"@doc": [{"@code": "val = sim.patch.Area", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Area\">area</a> (in m\u00b2) of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.patch.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.patch.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Reaction": {"A": {"@doc": [{"@code": "val = sim.patch.sreac['fwd'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "val = sim.patch.sreac['bkw'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Active": {"@doc": [{"@code": "active = sim.patch.sreac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "active = sim.patch.sreac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "active = sim.patch.reac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "active = sim.patch.reac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "C": {"@doc": [{"@code": "val = sim.patch.sreac['fwd'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "val = sim.patch.sreac['bkw'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Extent": {"@doc": [{"@code": "val = sim.patch.sreac['fwd'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "val = sim.patch.sreac['bkw'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "H": {"@doc": [{"@code": "val = sim.patch.sreac['fwd'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "val = sim.patch.sreac['bkw'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "K": {"@doc": [{"@code": "val = sim.patch.sreac['fwd'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "val = sim.patch.sreac['bkw'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "val = sim.patch.spec.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.patch.spec.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.patch.spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}}}, "Region of Interest": {"Amount": {"@doc": [{"@code": "val = sim.roi.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Conc": {"@doc": [{"@code": "conc = sim.roi.Conc", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.roi.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}}, "Surf. Diff. Boundary": {"DiffusionActive": {"@doc": [{"@code": "val = sim.sdiffb.DiffusionActive", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.DiffusionActive\">diffusion active status</a> of <a href=\"API_geom.html#steps.API_2.geom.SDiffBoundary\">SDiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}, "Species": {"DiffusionActive": {"@doc": [{"@code": "val = sim.sdiffb.spec.DiffusionActive", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.DiffusionActive\">diffusion active status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.SDiffBoundary\">SDiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}}}, "Tetrahedron": {"Amount": {"@doc": [{"@code": "val = sim.TET(tet).Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TETS(tetLst).Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.TET(tet).Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "clamped = sim.TETS(tetLst).Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Conc": {"@doc": [{"@code": "conc = sim.TET(tet).Conc", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "conc = sim.TETS(tetLst).Conc", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.TET(tet).Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "cnt = sim.TETS(tetLst).Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Diffusion": {"A": {"@doc": [{"@code": "val = sim.TET(tet).diff.A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TETS(tetLst).diff.A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Active": {"@doc": [{"@code": "active = sim.TET(tet).diff.Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "active = sim.TETS(tetLst).diff.Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "D": {"@doc": [{"@code": "dcst = sim.TET(tet).diff.D", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "dcst = sim.TET(tet).diff(direc=tet2).D", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> diff towards <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet2</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "dcst = sim.TETS(tetLst).diff.D", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}}, "Reaction": {"A": {"@doc": [{"@code": "val = sim.TET(tet).reac['fwd'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TET(tet).reac['bkw'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TETS(tetLst).reac['fwd'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}, {"@code": "val = sim.TETS(tetLst).reac['bkw'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Active": {"@doc": [{"@code": "active = sim.TET(tet).reac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "active = sim.TET(tet).reac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "active = sim.TETS(tetLst).reac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}, {"@code": "active = sim.TETS(tetLst).reac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "C": {"@doc": [{"@code": "val = sim.TET(tet).reac['fwd'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TET(tet).reac['bkw'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TETS(tetLst).reac['fwd'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}, {"@code": "val = sim.TETS(tetLst).reac['bkw'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "H": {"@doc": [{"@code": "val = sim.TET(tet).reac['fwd'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TET(tet).reac['bkw'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TETS(tetLst).reac['fwd'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}, {"@code": "val = sim.TETS(tetLst).reac['bkw'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "K": {"@doc": [{"@code": "val = sim.TET(tet).reac['fwd'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TET(tet).reac['bkw'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TETS(tetLst).reac['fwd'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}, {"@code": "val = sim.TETS(tetLst).reac['bkw'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "val = sim.TET(tet).spec.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TETS(tetLst).spec.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.TET(tet).spec.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "clamped = sim.TETS(tetLst).spec.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Conc": {"@doc": [{"@code": "conc = sim.TET(tet).spec.Conc", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "conc = sim.TETS(tetLst).spec.Conc", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.TET(tet).spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "cnt = sim.TETS(tetLst).spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}}, "V": {"@doc": [{"@code": "val = sim.TET(tet).V", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TETS(tetLst).V", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "VClamped": {"@doc": [{"@code": "clamped = sim.TET(tet).VClamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "clamped = sim.TETS(tetLst).VClamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Vol": {"@doc": [{"@code": "val = sim.TET(tet).Vol", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Vol\">volume</a> (in m\u00b3) of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TETS(tetLst).Vol", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Vol\">volume</a> (in m\u00b3) of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}}, "Triangle": {"Amount": {"@doc": [{"@code": "val = sim.TRI(tri).Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Area": {"@doc": [{"@code": "val = sim.TRI(tri).Area", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Area\">area</a> (in m\u00b2) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).Area", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Area\">area</a> (in m\u00b2) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.TRI(tri).Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "clamped = sim.TRIS(triLst).Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.TRI(tri).Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "cnt = sim.TRIS(triLst).Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Current": {"I": {"@doc": [{"@code": "val = sim.TRI(tri).curr.I", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.I\">current</a> (in A) of <a href=\"API_model.html#steps.API_2.model.GHKCurr\">GHKCurr</a> <code class=\"py py-class\">curr</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).curr.I", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.I\">current</a> (in A) of <a href=\"API_model.html#steps.API_2.model.GHKCurr\">GHKCurr</a> <code class=\"py py-class\">curr</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "val = sim.TRI(tri).curr.I", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.I\">current</a> (in A) of <a href=\"API_model.html#steps.API_2.model.OhmicCurr\">OhmicCurr</a> <code class=\"py py-class\">curr</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).curr.I", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.I\">current</a> (in A) of <a href=\"API_model.html#steps.API_2.model.OhmicCurr\">OhmicCurr</a> <code class=\"py py-class\">curr</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "I": {"@doc": [{"@code": "val = sim.TRI(tri).I", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.I\">current</a> (in A) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).I", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.I\">current</a> (in A) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "IClamp": {"@doc": [{"@code": "val = sim.TRI(tri).IClamp", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.IClamp\">current clamp</a> (in A) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).IClamp", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.IClamp\">current clamp</a> (in A) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "SDiffD": {"@doc": [{"@code": "dcst = sim.TRI(tri).SDiffD", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.SDiffD\">surface diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "dcst = sim.TRIS(triLst).SDiffD", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.SDiffD\">surface diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Diffusion": {"D": {"@doc": [{"@code": "dcst = sim.TRI(tri).sdiff.D", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "dcst = sim.TRI(tri).sdiff(direc=tri2).D", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> diff towards <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri2</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "dcst = sim.TRIS(triLst).sdiff.D", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "Reaction": {"A": {"@doc": [{"@code": "val = sim.TRI(tri).sreac['fwd'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRI(tri).sreac['bkw'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).sreac['fwd'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "val = sim.TRIS(triLst).sreac['bkw'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Active": {"@doc": [{"@code": "active = sim.TRI(tri).sreac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "active = sim.TRI(tri).sreac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "active = sim.TRIS(triLst).sreac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "active = sim.TRIS(triLst).sreac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "active = sim.TRI(tri).reac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "active = sim.TRI(tri).reac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "active = sim.TRIS(triLst).reac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "active = sim.TRIS(triLst).reac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "C": {"@doc": [{"@code": "val = sim.TRI(tri).sreac['fwd'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRI(tri).sreac['bkw'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).sreac['fwd'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "val = sim.TRIS(triLst).sreac['bkw'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "H": {"@doc": [{"@code": "val = sim.TRI(tri).sreac['fwd'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRI(tri).sreac['bkw'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).sreac['fwd'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "val = sim.TRIS(triLst).sreac['bkw'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "K": {"@doc": [{"@code": "val = sim.TRI(tri).sreac['fwd'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRI(tri).sreac['bkw'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).sreac['fwd'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "val = sim.TRIS(triLst).sreac['bkw'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "val = sim.TRI(tri).reac['fwd'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRI(tri).reac['bkw'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).reac['fwd'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "val = sim.TRIS(triLst).reac['bkw'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "val = sim.TRI(tri).spec.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).spec.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.TRI(tri).spec.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "clamped = sim.TRIS(triLst).spec.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.TRI(tri).spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "cnt = sim.TRIS(triLst).spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "V": {"@doc": [{"@code": "val = sim.TRI(tri).V", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).V", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "VClamped": {"@doc": [{"@code": "clamped = sim.TRI(tri).VClamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "clamped = sim.TRIS(triLst).VClamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "Vertex": {"IClamp": {"@doc": [{"@code": "val = sim.VERT(vert).IClamp", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.IClamp\">current clamp</a> (in A) of <a href=\"API_geom.html#steps.API_2.geom.VertReference\">VertReference</a> <code class=\"py py-class\">vert</code>. "}, {"@code": "val = sim.VERTS(vertLst).IClamp", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.IClamp\">current clamp</a> (in A) of each vertex in <a href=\"API_geom.html#steps.API_2.geom.VertList\">VertList</a> <code class=\"py py-class\">vertLst</code>. "}]}, "V": {"@doc": [{"@code": "val = sim.VERT(vert).V", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of <a href=\"API_geom.html#steps.API_2.geom.VertReference\">VertReference</a> <code class=\"py py-class\">vert</code>. "}, {"@code": "val = sim.VERTS(vertLst).V", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of each vertex in <a href=\"API_geom.html#steps.API_2.geom.VertList\">VertList</a> <code class=\"py py-class\">vertLst</code>. "}]}, "VClamped": {"@doc": [{"@code": "clamped = sim.VERT(vert).VClamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of <a href=\"API_geom.html#steps.API_2.geom.VertReference\">VertReference</a> <code class=\"py py-class\">vert</code>. "}, {"@code": "clamped = sim.VERTS(vertLst).VClamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of each vertex in <a href=\"API_geom.html#steps.API_2.geom.VertList\">VertList</a> <code class=\"py py-class\">vertLst</code>. "}]}}}, "TetOpSplit": {"Compartment": {"Amount": {"@doc": [{"@code": "val = sim.comp.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.comp.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Conc": {"@doc": [{"@code": "conc = sim.comp.Conc", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.comp.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Diffusion": {"Active": {"@doc": [{"@code": "active = sim.comp.diff.Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "D": {"@doc": [{"@code": "dcst = sim.comp.diff.D", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Reaction": {"A": {"@doc": [{"@code": "val = sim.comp.reac['fwd'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "val = sim.comp.reac['bkw'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Active": {"@doc": [{"@code": "active = sim.comp.reac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "active = sim.comp.reac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "C": {"@doc": [{"@code": "val = sim.comp.reac['fwd'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "val = sim.comp.reac['bkw'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Extent": {"@doc": [{"@code": "val = sim.comp.reac['fwd'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "val = sim.comp.reac['bkw'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "H": {"@doc": [{"@code": "val = sim.comp.reac['fwd'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "val = sim.comp.reac['bkw'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "K": {"@doc": [{"@code": "val = sim.comp.reac['fwd'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "val = sim.comp.reac['bkw'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "val = sim.comp.spec.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.comp.spec.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Conc": {"@doc": [{"@code": "conc = sim.comp.spec.Conc", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.comp.spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Vol": {"@doc": [{"@code": "val = sim.comp.Vol", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Vol\">volume</a> (in m\u00b3) of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Diff. Boundary": {"DiffusionActive": {"@doc": [{"@code": "val = sim.diffb.DiffusionActive", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.DiffusionActive\">diffusion active status</a> of <a href=\"API_geom.html#steps.API_2.geom.DiffBoundary\">DiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}, "Species": {"DiffusionActive": {"@doc": [{"@code": "val = sim.diffb.spec.DiffusionActive", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.DiffusionActive\">diffusion active status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.DiffBoundary\">DiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}}}, "Diffusion": {"Extent": {"@doc": [{"@code": "val = sim.diff.Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code>. "}]}}, "Membrane": {"Res": {"@doc": [{"@code": "ro, vrev = sim.memb.Res", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Res\">electrical resistivity</a> of <a href=\"API_geom.html#steps.API_2.geom.Membrane\">Membrane</a> <code class=\"py py-class\">memb</code>. "}]}}, "Patch": {"Amount": {"@doc": [{"@code": "val = sim.patch.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Area": {"@doc": [{"@code": "val = sim.patch.Area", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Area\">area</a> (in m\u00b2) of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.patch.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.patch.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Reaction": {"A": {"@doc": [{"@code": "val = sim.patch.sreac['fwd'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "val = sim.patch.sreac['bkw'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Active": {"@doc": [{"@code": "active = sim.patch.sreac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "active = sim.patch.sreac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "active = sim.patch.reac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "active = sim.patch.reac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "C": {"@doc": [{"@code": "val = sim.patch.sreac['fwd'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "val = sim.patch.sreac['bkw'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Extent": {"@doc": [{"@code": "val = sim.patch.sreac['fwd'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "val = sim.patch.sreac['bkw'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "H": {"@doc": [{"@code": "val = sim.patch.sreac['fwd'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "val = sim.patch.sreac['bkw'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "K": {"@doc": [{"@code": "val = sim.patch.sreac['fwd'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "val = sim.patch.sreac['bkw'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "val = sim.patch.spec.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.patch.spec.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.patch.spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}}}, "Region of Interest": {"Amount": {"@doc": [{"@code": "val = sim.roi.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Area": {"@doc": [{"@code": "val = sim.roi.Area", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Area\">area</a> (in m\u00b2) of <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Conc": {"@doc": [{"@code": "conc = sim.roi.Conc", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.roi.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Diffusion": {"Extent": {"@doc": [{"@code": "val = sim.roi.diff.Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}}, "Reaction": {"Extent": {"@doc": [{"@code": "val = sim.roi.reac['fwd'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}, {"@code": "val = sim.roi.reac['bkw'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}, {"@code": "val = sim.roi.sreac['fwd'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}, {"@code": "val = sim.roi.sreac['bkw'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "val = sim.roi.spec.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Conc": {"@doc": [{"@code": "conc = sim.roi.spec.Conc", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.roi.spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}}, "Vol": {"@doc": [{"@code": "val = sim.roi.Vol", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Vol\">volume</a> (in m\u00b3) of <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}}, "Reaction": {"Extent": {"@doc": [{"@code": "val = sim.reac['fwd'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code>. "}, {"@code": "val = sim.reac['bkw'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code>. "}]}}, "Surf. Diff. Boundary": {"DiffusionActive": {"@doc": [{"@code": "val = sim.sdiffb.DiffusionActive", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.DiffusionActive\">diffusion active status</a> of <a href=\"API_geom.html#steps.API_2.geom.SDiffBoundary\">SDiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}, "Species": {"DiffusionActive": {"@doc": [{"@code": "val = sim.sdiffb.spec.DiffusionActive", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.DiffusionActive\">diffusion active status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.SDiffBoundary\">SDiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}}}, "Tetrahedron": {"Amount": {"@doc": [{"@code": "val = sim.TET(tet).Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TETS(tetLst).Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.TET(tet).Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "clamped = sim.TETS(tetLst).Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Conc": {"@doc": [{"@code": "conc = sim.TET(tet).Conc", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "conc = sim.TETS(tetLst).Conc", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.TET(tet).Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "cnt = sim.TETS(tetLst).Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Diffusion": {"A": {"@doc": [{"@code": "val = sim.TET(tet).diff.A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TETS(tetLst).diff.A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Active": {"@doc": [{"@code": "active = sim.TET(tet).diff.Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "active = sim.TETS(tetLst).diff.Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "D": {"@doc": [{"@code": "dcst = sim.TET(tet).diff.D", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "dcst = sim.TET(tet).diff(direc=tet2).D", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> diff towards <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet2</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "dcst = sim.TETS(tetLst).diff.D", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}}, "Reaction": {"A": {"@doc": [{"@code": "val = sim.TET(tet).reac['fwd'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TET(tet).reac['bkw'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TETS(tetLst).reac['fwd'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}, {"@code": "val = sim.TETS(tetLst).reac['bkw'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Active": {"@doc": [{"@code": "active = sim.TET(tet).reac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "active = sim.TET(tet).reac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "active = sim.TETS(tetLst).reac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}, {"@code": "active = sim.TETS(tetLst).reac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "C": {"@doc": [{"@code": "val = sim.TET(tet).reac['fwd'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TET(tet).reac['bkw'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TETS(tetLst).reac['fwd'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}, {"@code": "val = sim.TETS(tetLst).reac['bkw'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "H": {"@doc": [{"@code": "val = sim.TET(tet).reac['fwd'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TET(tet).reac['bkw'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TETS(tetLst).reac['fwd'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}, {"@code": "val = sim.TETS(tetLst).reac['bkw'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "K": {"@doc": [{"@code": "val = sim.TET(tet).reac['fwd'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TET(tet).reac['bkw'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TETS(tetLst).reac['fwd'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}, {"@code": "val = sim.TETS(tetLst).reac['bkw'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "val = sim.TET(tet).spec.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TETS(tetLst).spec.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.TET(tet).spec.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "clamped = sim.TETS(tetLst).spec.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Conc": {"@doc": [{"@code": "conc = sim.TET(tet).spec.Conc", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "conc = sim.TETS(tetLst).spec.Conc", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.TET(tet).spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "cnt = sim.TETS(tetLst).spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}}, "V": {"@doc": [{"@code": "val = sim.TET(tet).V", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TETS(tetLst).V", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "VClamped": {"@doc": [{"@code": "clamped = sim.TET(tet).VClamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "clamped = sim.TETS(tetLst).VClamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Vol": {"@doc": [{"@code": "val = sim.TET(tet).Vol", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Vol\">volume</a> (in m\u00b3) of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TETS(tetLst).Vol", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Vol\">volume</a> (in m\u00b3) of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}}, "Triangle": {"Amount": {"@doc": [{"@code": "val = sim.TRI(tri).Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Area": {"@doc": [{"@code": "val = sim.TRI(tri).Area", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Area\">area</a> (in m\u00b2) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).Area", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Area\">area</a> (in m\u00b2) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.TRI(tri).Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "clamped = sim.TRIS(triLst).Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.TRI(tri).Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "cnt = sim.TRIS(triLst).Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Current": {"I": {"@doc": [{"@code": "val = sim.TRI(tri).curr.I", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.I\">current</a> (in A) of <a href=\"API_model.html#steps.API_2.model.GHKCurr\">GHKCurr</a> <code class=\"py py-class\">curr</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).curr.I", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.I\">current</a> (in A) of <a href=\"API_model.html#steps.API_2.model.GHKCurr\">GHKCurr</a> <code class=\"py py-class\">curr</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "val = sim.TRI(tri).curr.I", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.I\">current</a> (in A) of <a href=\"API_model.html#steps.API_2.model.OhmicCurr\">OhmicCurr</a> <code class=\"py py-class\">curr</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).curr.I", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.I\">current</a> (in A) of <a href=\"API_model.html#steps.API_2.model.OhmicCurr\">OhmicCurr</a> <code class=\"py py-class\">curr</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "I": {"@doc": [{"@code": "val = sim.TRI(tri).I", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.I\">current</a> (in A) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).I", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.I\">current</a> (in A) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "IClamp": {"@doc": [{"@code": "val = sim.TRI(tri).IClamp", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.IClamp\">current clamp</a> (in A) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).IClamp", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.IClamp\">current clamp</a> (in A) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "SDiffD": {"@doc": [{"@code": "dcst = sim.TRI(tri).SDiffD", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.SDiffD\">surface diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "dcst = sim.TRIS(triLst).SDiffD", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.SDiffD\">surface diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Diffusion": {"D": {"@doc": [{"@code": "dcst = sim.TRI(tri).sdiff.D", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "dcst = sim.TRI(tri).sdiff(direc=tri2).D", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> diff towards <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri2</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "dcst = sim.TRIS(triLst).sdiff.D", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "Reaction": {"A": {"@doc": [{"@code": "val = sim.TRI(tri).sreac['fwd'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRI(tri).sreac['bkw'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).sreac['fwd'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "val = sim.TRIS(triLst).sreac['bkw'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Active": {"@doc": [{"@code": "active = sim.TRI(tri).sreac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "active = sim.TRI(tri).sreac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "active = sim.TRIS(triLst).sreac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "active = sim.TRIS(triLst).sreac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "active = sim.TRI(tri).reac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "active = sim.TRI(tri).reac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "active = sim.TRIS(triLst).reac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "active = sim.TRIS(triLst).reac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "C": {"@doc": [{"@code": "val = sim.TRI(tri).sreac['fwd'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRI(tri).sreac['bkw'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).sreac['fwd'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "val = sim.TRIS(triLst).sreac['bkw'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "H": {"@doc": [{"@code": "val = sim.TRI(tri).sreac['fwd'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRI(tri).sreac['bkw'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).sreac['fwd'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "val = sim.TRIS(triLst).sreac['bkw'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "K": {"@doc": [{"@code": "val = sim.TRI(tri).sreac['fwd'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRI(tri).sreac['bkw'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).sreac['fwd'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "val = sim.TRIS(triLst).sreac['bkw'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "val = sim.TRI(tri).reac['fwd'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRI(tri).reac['bkw'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).reac['fwd'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "val = sim.TRIS(triLst).reac['bkw'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "val = sim.TRI(tri).spec.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).spec.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.TRI(tri).spec.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "clamped = sim.TRIS(triLst).spec.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.TRI(tri).spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "cnt = sim.TRIS(triLst).spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "V": {"@doc": [{"@code": "val = sim.TRI(tri).V", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).V", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "VClamped": {"@doc": [{"@code": "clamped = sim.TRI(tri).VClamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "clamped = sim.TRIS(triLst).VClamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "Vertex": {"IClamp": {"@doc": [{"@code": "val = sim.VERT(vert).IClamp", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.IClamp\">current clamp</a> (in A) of <a href=\"API_geom.html#steps.API_2.geom.VertReference\">VertReference</a> <code class=\"py py-class\">vert</code>. "}, {"@code": "val = sim.VERTS(vertLst).IClamp", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.IClamp\">current clamp</a> (in A) of each vertex in <a href=\"API_geom.html#steps.API_2.geom.VertList\">VertList</a> <code class=\"py py-class\">vertLst</code>. "}]}, "V": {"@doc": [{"@code": "val = sim.VERT(vert).V", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of <a href=\"API_geom.html#steps.API_2.geom.VertReference\">VertReference</a> <code class=\"py py-class\">vert</code>. "}, {"@code": "val = sim.VERTS(vertLst).V", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of each vertex in <a href=\"API_geom.html#steps.API_2.geom.VertList\">VertList</a> <code class=\"py py-class\">vertLst</code>. "}]}, "VClamped": {"@doc": [{"@code": "clamped = sim.VERT(vert).VClamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of <a href=\"API_geom.html#steps.API_2.geom.VertReference\">VertReference</a> <code class=\"py py-class\">vert</code>. "}, {"@code": "clamped = sim.VERTS(vertLst).VClamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of each vertex in <a href=\"API_geom.html#steps.API_2.geom.VertList\">VertList</a> <code class=\"py py-class\">vertLst</code>. "}]}}}, "TetVesicle": {"Compartment": {"Amount": {"@doc": [{"@code": "val = sim.comp.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.comp.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Conc": {"@doc": [{"@code": "conc = sim.comp.Conc", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.comp.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Diffusion": {"Active": {"@doc": [{"@code": "active = sim.comp.diff.Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "D": {"@doc": [{"@code": "dcst = sim.comp.diff.D", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Reaction": {"A": {"@doc": [{"@code": "val = sim.comp.reac['fwd'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "val = sim.comp.reac['bkw'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Active": {"@doc": [{"@code": "active = sim.comp.reac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "active = sim.comp.reac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "C": {"@doc": [{"@code": "val = sim.comp.reac['fwd'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "val = sim.comp.reac['bkw'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Extent": {"@doc": [{"@code": "val = sim.comp.reac['fwd'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "val = sim.comp.reac['bkw'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "H": {"@doc": [{"@code": "val = sim.comp.reac['fwd'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "val = sim.comp.reac['bkw'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "K": {"@doc": [{"@code": "val = sim.comp.reac['fwd'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "val = sim.comp.reac['bkw'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "val = sim.comp.spec.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.comp.spec.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Conc": {"@doc": [{"@code": "conc = sim.comp.spec.Conc", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.comp.spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Vesicle type": {"Species": {"Count": {"@doc": [{"@code": "cnt = sim.comp.ves('in').spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in the lumens of <a href=\"API_model.html#steps.API_2.model.Vesicle\">Vesicle</a>s of type <code class=\"py py-class\">ves</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "cnt = sim.comp.ves('surf').spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in the surfaces of <a href=\"API_model.html#steps.API_2.model.Vesicle\">Vesicle</a>s of type <code class=\"py py-class\">ves</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Link Species": {"Count": {"@doc": [{"@code": "cnt = sim.comp.ves('surf').linkspec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.LinkSpecies\">LinkSpecies</a> <code class=\"py py-class\">linkspec</code> in the surfaces of <a href=\"API_model.html#steps.API_2.model.Vesicle\">Vesicle</a>s of type <code class=\"py py-class\">ves</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}}, "Vol": {"@doc": [{"@code": "val = sim.comp.Vol", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Vol\">volume</a> (in m\u00b3) of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Diff. Boundary": {"DiffusionActive": {"@doc": [{"@code": "val = sim.diffb.DiffusionActive", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.DiffusionActive\">diffusion active status</a> of <a href=\"API_geom.html#steps.API_2.geom.DiffBoundary\">DiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}, "Species": {"DiffusionActive": {"@doc": [{"@code": "val = sim.diffb.spec.DiffusionActive", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.DiffusionActive\">diffusion active status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.DiffBoundary\">DiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}}}, "Exocytosis": {"Events": {"@doc": [{"@code": "events = sim.exo.Events", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Events\">list of events</a> of <a href=\"API_model.html#steps.API_2.model.Exocytosis\">Exocytosis</a> <code class=\"py py-class\">exo</code>. "}]}, "Extent": {"@doc": [{"@code": "val = sim.exo.Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of <a href=\"API_model.html#steps.API_2.model.Exocytosis\">Exocytosis</a> <code class=\"py py-class\">exo</code>. "}]}}, "Membrane": {"Res": {"@doc": [{"@code": "ro, vrev = sim.memb.Res", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Res\">electrical resistivity</a> of <a href=\"API_geom.html#steps.API_2.geom.Membrane\">Membrane</a> <code class=\"py py-class\">memb</code>. "}]}}, "Patch": {"Amount": {"@doc": [{"@code": "val = sim.patch.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Area": {"@doc": [{"@code": "val = sim.patch.Area", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Area\">area</a> (in m\u00b2) of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.patch.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.patch.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Raft type": {"Count": {"@doc": [{"@code": "cnt = sim.patch.raft.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Raft\">Raft</a>s of type <code class=\"py py-class\">raft</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Indices": {"@doc": [{"@code": "idxs = sim.patch.raft.Indices", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Indices\">indices</a> of <a href=\"API_model.html#steps.API_2.model.Raft\">Raft</a>s of type <code class=\"py py-class\">raft</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Species": {"Count": {"@doc": [{"@code": "cnt = sim.patch.raft.spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_model.html#steps.API_2.model.Raft\">Raft</a>s of type <code class=\"py py-class\">raft</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}}}, "Reaction": {"A": {"@doc": [{"@code": "val = sim.patch.sreac['fwd'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "val = sim.patch.sreac['bkw'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Active": {"@doc": [{"@code": "active = sim.patch.sreac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "active = sim.patch.sreac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "active = sim.patch.reac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "active = sim.patch.reac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "C": {"@doc": [{"@code": "val = sim.patch.sreac['fwd'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "val = sim.patch.sreac['bkw'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Extent": {"@doc": [{"@code": "val = sim.patch.sreac['fwd'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "val = sim.patch.sreac['bkw'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "H": {"@doc": [{"@code": "val = sim.patch.sreac['fwd'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "val = sim.patch.sreac['bkw'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "K": {"@doc": [{"@code": "val = sim.patch.sreac['fwd'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "val = sim.patch.sreac['bkw'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "val = sim.patch.spec.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.patch.spec.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.patch.spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}}}, "Region of Interest": {"Amount": {"@doc": [{"@code": "val = sim.roi.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Area": {"@doc": [{"@code": "val = sim.roi.Area", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Area\">area</a> (in m\u00b2) of <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Conc": {"@doc": [{"@code": "conc = sim.roi.Conc", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.roi.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Diffusion": {"Extent": {"@doc": [{"@code": "val = sim.roi.diff.Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}}, "Reaction": {"Extent": {"@doc": [{"@code": "val = sim.roi.reac['fwd'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}, {"@code": "val = sim.roi.reac['bkw'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}, {"@code": "val = sim.roi.sreac['fwd'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}, {"@code": "val = sim.roi.sreac['bkw'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "val = sim.roi.spec.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Conc": {"@doc": [{"@code": "conc = sim.roi.spec.Conc", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.roi.spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}}, "Tetrahedron": {"Species": {"Count": {"@doc": [{"@code": "cnt = sim.roi.TET(tet).spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}, {"@code": "cnt = sim.roi.TETS(tetLst).spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}}}, "Triangle": {"Species": {"Count": {"@doc": [{"@code": "cnt = sim.roi.TRI(tri).spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}, {"@code": "cnt = sim.roi.TRIS(triLst).spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}}}, "Vol": {"@doc": [{"@code": "val = sim.roi.Vol", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Vol\">volume</a> (in m\u00b3) of <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}}, "Raft Endocytosis": {"Events": {"@doc": [{"@code": "events = sim.rendo.Events", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Events\">list of events</a> of <a href=\"API_model.html#steps.API_2.model.RaftEndocytosis\">RaftEndocytosis</a> <code class=\"py py-class\">rendo</code>. "}]}, "Extent": {"@doc": [{"@code": "val = sim.rendo.Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of <a href=\"API_model.html#steps.API_2.model.RaftEndocytosis\">RaftEndocytosis</a> <code class=\"py py-class\">rendo</code>. "}]}}, "Surf. Diff. Boundary": {"DiffusionActive": {"@doc": [{"@code": "val = sim.sdiffb.DiffusionActive", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.DiffusionActive\">diffusion active status</a> of <a href=\"API_geom.html#steps.API_2.geom.SDiffBoundary\">SDiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}, "Species": {"DiffusionActive": {"@doc": [{"@code": "val = sim.sdiffb.spec.DiffusionActive", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.DiffusionActive\">diffusion active status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.SDiffBoundary\">SDiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}}}, "Specific Raft": {"Immobility": {"@doc": [{"@code": "immob = sim.RAFT(raftref).Immobility", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Immobility\">immobility status</a> of <a href=\"API_sim.html#steps.API_2.sim.RaftReference\">RaftReference</a> <code class=\"py py-class\">raftref</code>. "}, {"@code": "immob = sim.RAFTS(raftLst).Immobility", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Immobility\">immobility status</a> of each raft in <a href=\"API_sim.html#steps.API_2.sim.RaftList\">RaftList</a> <code class=\"py py-class\">raftLst</code>. "}]}, "Pos": {"@doc": [{"@code": "pos = sim.RAFT(raftref).Pos", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Pos\">position in cartesian coordinates</a> of <a href=\"API_sim.html#steps.API_2.sim.RaftReference\">RaftReference</a> <code class=\"py py-class\">raftref</code>. "}, {"@code": "pos = sim.RAFTS(raftLst).Pos", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Pos\">position in cartesian coordinates</a> of each raft in <a href=\"API_sim.html#steps.API_2.sim.RaftList\">RaftList</a> <code class=\"py py-class\">raftLst</code>. "}]}, "Raft Endocytosis": {"K": {"@doc": [{"@code": "val = sim.RAFT(raftref).rendo.K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">rate</a> of <a href=\"API_model.html#steps.API_2.model.RaftEndocytosis\">RaftEndocytosis</a> <code class=\"py py-class\">rendo</code> in <a href=\"API_sim.html#steps.API_2.sim.RaftReference\">RaftReference</a> <code class=\"py py-class\">raftref</code>. "}, {"@code": "val = sim.RAFTS(raftLst).rendo.K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">rate</a> of <a href=\"API_model.html#steps.API_2.model.RaftEndocytosis\">RaftEndocytosis</a> <code class=\"py py-class\">rendo</code> in each raft in <a href=\"API_sim.html#steps.API_2.sim.RaftList\">RaftList</a> <code class=\"py py-class\">raftLst</code>. "}]}}, "Reaction": {"Active": {"@doc": [{"@code": "active = sim.RAFT(raftref).sreac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_sim.html#steps.API_2.sim.RaftReference\">RaftReference</a> <code class=\"py py-class\">raftref</code>. "}, {"@code": "active = sim.RAFT(raftref).sreac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_sim.html#steps.API_2.sim.RaftReference\">RaftReference</a> <code class=\"py py-class\">raftref</code>. "}, {"@code": "active = sim.RAFTS(raftLst).sreac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each raft in <a href=\"API_sim.html#steps.API_2.sim.RaftList\">RaftList</a> <code class=\"py py-class\">raftLst</code>. "}, {"@code": "active = sim.RAFTS(raftLst).sreac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each raft in <a href=\"API_sim.html#steps.API_2.sim.RaftList\">RaftList</a> <code class=\"py py-class\">raftLst</code>. "}]}}, "Species": {"Count": {"@doc": [{"@code": "cnt = sim.RAFT(raftref).spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_sim.html#steps.API_2.sim.RaftReference\">RaftReference</a> <code class=\"py py-class\">raftref</code>. "}, {"@code": "cnt = sim.RAFTS(raftLst).spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each raft in <a href=\"API_sim.html#steps.API_2.sim.RaftList\">RaftList</a> <code class=\"py py-class\">raftLst</code>. "}]}}}, "Specific Vesicle": {"Immobility": {"@doc": [{"@code": "immob = sim.VESICLE(vesref).Immobility", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Immobility\">immobility status</a> of <a href=\"API_sim.html#steps.API_2.sim.VesicleReference\">VesicleReference</a> <code class=\"py py-class\">vesref</code>. "}, {"@code": "immob = sim.VESICLES(vesLst).Immobility", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Immobility\">immobility status</a> of each vesicle in <a href=\"API_sim.html#steps.API_2.sim.VesicleList\">VesicleList</a> <code class=\"py py-class\">vesLst</code>. "}]}, "Species": {"Count": {"@doc": [{"@code": "cnt = sim.VESICLE(vesref)('in').spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in the lumen of <a href=\"API_sim.html#steps.API_2.sim.VesicleReference\">VesicleReference</a> <code class=\"py py-class\">vesref</code>. "}, {"@code": "cnt = sim.VESICLES(vesLst)('in').spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in the lumen of each vesicle in <a href=\"API_sim.html#steps.API_2.sim.VesicleList\">VesicleList</a> <code class=\"py py-class\">vesLst</code>. "}, {"@code": "cnt = sim.VESICLE(vesref)('surf').spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in the surface of <a href=\"API_sim.html#steps.API_2.sim.VesicleReference\">VesicleReference</a> <code class=\"py py-class\">vesref</code>. "}, {"@code": "cnt = sim.VESICLES(vesLst)('surf').spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in the surface of each vesicle in <a href=\"API_sim.html#steps.API_2.sim.VesicleList\">VesicleList</a> <code class=\"py py-class\">vesLst</code>. "}]}, "Indices": {"@doc": [{"@code": "idxs = sim.VESICLE(vesref)('surf').spec.Indices", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Indices\">indices</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in the surface of <a href=\"API_sim.html#steps.API_2.sim.VesicleReference\">VesicleReference</a> <code class=\"py py-class\">vesref</code>. "}, {"@code": "idxs = sim.VESICLES(vesLst)('surf').spec.Indices", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Indices\">indices</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in the surface of each vesicle in <a href=\"API_sim.html#steps.API_2.sim.VesicleList\">VesicleList</a> <code class=\"py py-class\">vesLst</code>. "}]}, "Pos": {"@doc": [{"@code": "pos = sim.VESICLE(vesref)('surf').spec.Pos", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Pos\">position in cartesian coordinates</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in the surface of <a href=\"API_sim.html#steps.API_2.sim.VesicleReference\">VesicleReference</a> <code class=\"py py-class\">vesref</code>. "}, {"@code": "pos = sim.VESICLES(vesLst)('surf').spec.Pos", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Pos\">position in cartesian coordinates</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in the surface of each vesicle in <a href=\"API_sim.html#steps.API_2.sim.VesicleList\">VesicleList</a> <code class=\"py py-class\">vesLst</code>. "}]}, "PosSpherical": {"@doc": [{"@code": "spos = sim.VESICLE(vesref)('surf').spec.PosSpherical", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.PosSpherical\">position in spherical coordinated</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in the surface of <a href=\"API_sim.html#steps.API_2.sim.VesicleReference\">VesicleReference</a> <code class=\"py py-class\">vesref</code>. "}, {"@code": "spos = sim.VESICLES(vesLst)('surf').spec.PosSpherical", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.PosSpherical\">position in spherical coordinated</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in the surface of each vesicle in <a href=\"API_sim.html#steps.API_2.sim.VesicleList\">VesicleList</a> <code class=\"py py-class\">vesLst</code>. "}]}}, "OverlapTets": {"@doc": [{"@code": "tetIdxs = sim.VESICLE(vesref).OverlapTets", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.OverlapTets\">indices of the overlaped tetrahedron</a> of <a href=\"API_sim.html#steps.API_2.sim.VesicleReference\">VesicleReference</a> <code class=\"py py-class\">vesref</code>. "}, {"@code": "tetIdxs = sim.VESICLES(vesLst).OverlapTets", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.OverlapTets\">indices of the overlaped tetrahedron</a> of each vesicle in <a href=\"API_sim.html#steps.API_2.sim.VesicleList\">VesicleList</a> <code class=\"py py-class\">vesLst</code>. "}]}, "Pos": {"@doc": [{"@code": "pos = sim.VESICLE(vesref).Pos", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Pos\">position in cartesian coordinates</a> of <a href=\"API_sim.html#steps.API_2.sim.VesicleReference\">VesicleReference</a> <code class=\"py py-class\">vesref</code>. "}, {"@code": "pos = sim.VESICLES(vesLst).Pos", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Pos\">position in cartesian coordinates</a> of each vesicle in <a href=\"API_sim.html#steps.API_2.sim.VesicleList\">VesicleList</a> <code class=\"py py-class\">vesLst</code>. "}]}, "Link Species": {"Count": {"@doc": [{"@code": "cnt = sim.VESICLE(vesref)('surf').linkspec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.LinkSpecies\">LinkSpecies</a> <code class=\"py py-class\">linkspec</code> in the surface of <a href=\"API_sim.html#steps.API_2.sim.VesicleReference\">VesicleReference</a> <code class=\"py py-class\">vesref</code>. "}, {"@code": "cnt = sim.VESICLES(vesLst)('surf').linkspec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.LinkSpecies\">LinkSpecies</a> <code class=\"py py-class\">linkspec</code> in the surface of each vesicle in <a href=\"API_sim.html#steps.API_2.sim.VesicleList\">VesicleList</a> <code class=\"py py-class\">vesLst</code>. "}]}, "Indices": {"@doc": [{"@code": "idxs = sim.VESICLE(vesref)('surf').linkspec.Indices", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Indices\">indices</a> of <a href=\"API_model.html#steps.API_2.model.LinkSpecies\">LinkSpecies</a> <code class=\"py py-class\">linkspec</code> in the surface of <a href=\"API_sim.html#steps.API_2.sim.VesicleReference\">VesicleReference</a> <code class=\"py py-class\">vesref</code>. "}, {"@code": "idxs = sim.VESICLES(vesLst)('surf').linkspec.Indices", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Indices\">indices</a> of <a href=\"API_model.html#steps.API_2.model.LinkSpecies\">LinkSpecies</a> <code class=\"py py-class\">linkspec</code> in the surface of each vesicle in <a href=\"API_sim.html#steps.API_2.sim.VesicleList\">VesicleList</a> <code class=\"py py-class\">vesLst</code>. "}]}, "Pos": {"@doc": [{"@code": "pos = sim.VESICLE(vesref)('surf').linkspec.Pos", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Pos\">position in cartesian coordinates</a> of <a href=\"API_model.html#steps.API_2.model.LinkSpecies\">LinkSpecies</a> <code class=\"py py-class\">linkspec</code> in the surface of <a href=\"API_sim.html#steps.API_2.sim.VesicleReference\">VesicleReference</a> <code class=\"py py-class\">vesref</code>. "}, {"@code": "pos = sim.VESICLES(vesLst)('surf').linkspec.Pos", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Pos\">position in cartesian coordinates</a> of <a href=\"API_model.html#steps.API_2.model.LinkSpecies\">LinkSpecies</a> <code class=\"py py-class\">linkspec</code> in the surface of each vesicle in <a href=\"API_sim.html#steps.API_2.sim.VesicleList\">VesicleList</a> <code class=\"py py-class\">vesLst</code>. "}]}}}, "Tetrahedron": {"Amount": {"@doc": [{"@code": "val = sim.TET(tet).Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TETS(tetLst).Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.TET(tet).Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "clamped = sim.TETS(tetLst).Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Conc": {"@doc": [{"@code": "conc = sim.TET(tet).Conc", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "conc = sim.TETS(tetLst).Conc", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.TET(tet).Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "cnt = sim.TETS(tetLst).Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Diffusion": {"A": {"@doc": [{"@code": "val = sim.TET(tet).diff.A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TETS(tetLst).diff.A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Active": {"@doc": [{"@code": "active = sim.TET(tet).diff.Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "active = sim.TETS(tetLst).diff.Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "D": {"@doc": [{"@code": "dcst = sim.TET(tet).diff.D", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "dcst = sim.TET(tet).diff(direc=tet2).D", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> diff towards <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet2</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "dcst = sim.TETS(tetLst).diff.D", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}}, "Reaction": {"A": {"@doc": [{"@code": "val = sim.TET(tet).reac['fwd'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TET(tet).reac['bkw'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TETS(tetLst).reac['fwd'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}, {"@code": "val = sim.TETS(tetLst).reac['bkw'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Active": {"@doc": [{"@code": "active = sim.TET(tet).reac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "active = sim.TET(tet).reac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "active = sim.TETS(tetLst).reac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}, {"@code": "active = sim.TETS(tetLst).reac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "C": {"@doc": [{"@code": "val = sim.TET(tet).reac['fwd'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TET(tet).reac['bkw'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TETS(tetLst).reac['fwd'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}, {"@code": "val = sim.TETS(tetLst).reac['bkw'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "H": {"@doc": [{"@code": "val = sim.TET(tet).reac['fwd'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TET(tet).reac['bkw'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TETS(tetLst).reac['fwd'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}, {"@code": "val = sim.TETS(tetLst).reac['bkw'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "K": {"@doc": [{"@code": "val = sim.TET(tet).reac['fwd'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TET(tet).reac['bkw'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TETS(tetLst).reac['fwd'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}, {"@code": "val = sim.TETS(tetLst).reac['bkw'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "val = sim.TET(tet).spec.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TETS(tetLst).spec.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.TET(tet).spec.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "clamped = sim.TETS(tetLst).spec.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Conc": {"@doc": [{"@code": "conc = sim.TET(tet).spec.Conc", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "conc = sim.TETS(tetLst).spec.Conc", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.TET(tet).spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "cnt = sim.TETS(tetLst).spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}}, "V": {"@doc": [{"@code": "val = sim.TET(tet).V", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TETS(tetLst).V", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "VClamped": {"@doc": [{"@code": "clamped = sim.TET(tet).VClamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "clamped = sim.TETS(tetLst).VClamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Vol": {"@doc": [{"@code": "val = sim.TET(tet).Vol", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Vol\">volume</a> (in m\u00b3) of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TETS(tetLst).Vol", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Vol\">volume</a> (in m\u00b3) of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}}, "Triangle": {"Amount": {"@doc": [{"@code": "val = sim.TRI(tri).Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Area": {"@doc": [{"@code": "val = sim.TRI(tri).Area", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Area\">area</a> (in m\u00b2) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).Area", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Area\">area</a> (in m\u00b2) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.TRI(tri).Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "clamped = sim.TRIS(triLst).Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.TRI(tri).Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "cnt = sim.TRIS(triLst).Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Diffusion": {"D": {"@doc": [{"@code": "dcst = sim.TRI(tri).diff.D", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "dcst = sim.TRIS(triLst).diff.D", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "dcst = sim.TRI(tri).sdiff.D", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "dcst = sim.TRI(tri).sdiff(direc=tri2).D", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> diff towards <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri2</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "dcst = sim.TRIS(triLst).sdiff.D", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "Exocytosis": {"Active": {"@doc": [{"@code": "active = sim.TRI(tri).exo.Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of <a href=\"API_model.html#steps.API_2.model.Exocytosis\">Exocytosis</a> <code class=\"py py-class\">exo</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "active = sim.TRIS(triLst).exo.Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of <a href=\"API_model.html#steps.API_2.model.Exocytosis\">Exocytosis</a> <code class=\"py py-class\">exo</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "Current": {"I": {"@doc": [{"@code": "val = sim.TRI(tri).curr.I", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.I\">current</a> (in A) of <a href=\"API_model.html#steps.API_2.model.GHKCurr\">GHKCurr</a> <code class=\"py py-class\">curr</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).curr.I", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.I\">current</a> (in A) of <a href=\"API_model.html#steps.API_2.model.GHKCurr\">GHKCurr</a> <code class=\"py py-class\">curr</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "val = sim.TRI(tri).curr.I", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.I\">current</a> (in A) of <a href=\"API_model.html#steps.API_2.model.OhmicCurr\">OhmicCurr</a> <code class=\"py py-class\">curr</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).curr.I", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.I\">current</a> (in A) of <a href=\"API_model.html#steps.API_2.model.OhmicCurr\">OhmicCurr</a> <code class=\"py py-class\">curr</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "I": {"@doc": [{"@code": "val = sim.TRI(tri).I", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.I\">current</a> (in A) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).I", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.I\">current</a> (in A) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "IClamp": {"@doc": [{"@code": "val = sim.TRI(tri).IClamp", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.IClamp\">current clamp</a> (in A) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).IClamp", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.IClamp\">current clamp</a> (in A) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Raft type": {"Count": {"@doc": [{"@code": "cnt = sim.TRI(tri).raft.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Raft\">Raft</a>s of type <code class=\"py py-class\">raft</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "cnt = sim.TRIS(triLst).raft.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Raft\">Raft</a>s of type <code class=\"py py-class\">raft</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "SDiffD": {"@doc": [{"@code": "dcst = sim.TRI(tri).SDiffD", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.SDiffD\">surface diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "dcst = sim.TRIS(triLst).SDiffD", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.SDiffD\">surface diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Reaction": {"A": {"@doc": [{"@code": "val = sim.TRI(tri).sreac['fwd'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRI(tri).sreac['bkw'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).sreac['fwd'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "val = sim.TRIS(triLst).sreac['bkw'].A", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.A\">propensity</a> (in s\u207b\u00b9) of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Active": {"@doc": [{"@code": "active = sim.TRI(tri).sreac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "active = sim.TRI(tri).sreac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "active = sim.TRIS(triLst).sreac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "active = sim.TRIS(triLst).sreac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "active = sim.TRI(tri).reac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "active = sim.TRI(tri).reac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "active = sim.TRIS(triLst).reac['fwd'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "active = sim.TRIS(triLst).reac['bkw'].Active", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "C": {"@doc": [{"@code": "val = sim.TRI(tri).sreac['fwd'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRI(tri).sreac['bkw'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).sreac['fwd'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "val = sim.TRIS(triLst).sreac['bkw'].C", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.C\">stochastic reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "H": {"@doc": [{"@code": "val = sim.TRI(tri).sreac['fwd'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRI(tri).sreac['bkw'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).sreac['fwd'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "val = sim.TRIS(triLst).sreac['bkw'].H", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.H\">number of reactant combinations h_mu</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "K": {"@doc": [{"@code": "val = sim.TRI(tri).sreac['fwd'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRI(tri).sreac['bkw'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).sreac['fwd'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "val = sim.TRIS(triLst).sreac['bkw'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "val = sim.TRI(tri).reac['fwd'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRI(tri).reac['bkw'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).reac['fwd'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "val = sim.TRIS(triLst).reac['bkw'].K", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "val = sim.TRI(tri).spec.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).spec.Amount", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Clamped": {"@doc": [{"@code": "clamped = sim.TRI(tri).spec.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "clamped = sim.TRIS(triLst).spec.Clamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.TRI(tri).spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "cnt = sim.TRIS(triLst).spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "V": {"@doc": [{"@code": "val = sim.TRI(tri).V", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).V", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "VClamped": {"@doc": [{"@code": "clamped = sim.TRI(tri).VClamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "clamped = sim.TRIS(triLst).VClamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "Vertex": {"IClamp": {"@doc": [{"@code": "val = sim.VERT(vert).IClamp", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.IClamp\">current clamp</a> (in A) of <a href=\"API_geom.html#steps.API_2.geom.VertReference\">VertReference</a> <code class=\"py py-class\">vert</code>. "}, {"@code": "val = sim.VERTS(vertLst).IClamp", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.IClamp\">current clamp</a> (in A) of each vertex in <a href=\"API_geom.html#steps.API_2.geom.VertList\">VertList</a> <code class=\"py py-class\">vertLst</code>. "}]}, "V": {"@doc": [{"@code": "val = sim.VERT(vert).V", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of <a href=\"API_geom.html#steps.API_2.geom.VertReference\">VertReference</a> <code class=\"py py-class\">vert</code>. "}, {"@code": "val = sim.VERTS(vertLst).V", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of each vertex in <a href=\"API_geom.html#steps.API_2.geom.VertList\">VertList</a> <code class=\"py py-class\">vertLst</code>. "}]}, "VClamped": {"@doc": [{"@code": "clamped = sim.VERT(vert).VClamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of <a href=\"API_geom.html#steps.API_2.geom.VertReference\">VertReference</a> <code class=\"py py-class\">vert</code>. "}, {"@code": "clamped = sim.VERTS(vertLst).VClamped", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of each vertex in <a href=\"API_geom.html#steps.API_2.geom.VertList\">VertList</a> <code class=\"py py-class\">vertLst</code>. "}]}}, "Vesicle type": {"Reaction": {"Extent": {"@doc": [{"@code": "val = sim.ves.sreac['fwd'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_model.html#steps.API_2.model.Vesicle\">Vesicle</a>s of type <code class=\"py py-class\">ves</code>. "}, {"@code": "val = sim.ves.sreac['bkw'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_model.html#steps.API_2.model.Vesicle\">Vesicle</a>s of type <code class=\"py py-class\">ves</code>. "}]}}}}, "DistTetOpSplit": {"Compartment": {"Species": {"Conc": {"@doc": [{"@code": "conc = sim.comp.spec.Conc", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.comp.spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}}, "Diff. Boundary": {"Species": {"DiffusionActive": {"@doc": [{"@code": "val = sim.diffb.spec.DiffusionActive", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.DiffusionActive\">diffusion active status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.DiffBoundary\">DiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}}}, "Diffusion": {"Extent": {"@doc": [{"@code": "val = sim.diff.Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code>. "}]}}, "Membrane": {"Res": {"@doc": [{"@code": "ro, vrev = sim.memb.Res", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Res\">electrical resistivity</a> of <a href=\"API_geom.html#steps.API_2.geom.Membrane\">Membrane</a> <code class=\"py py-class\">memb</code>. "}]}}, "Patch": {"Species": {"Count": {"@doc": [{"@code": "cnt = sim.patch.spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}}}, "Reaction": {"Extent": {"@doc": [{"@code": "val = sim.reac['fwd'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code>. "}, {"@code": "val = sim.reac['bkw'].Extent", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Extent\">extent</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code>. "}]}}, "Tetrahedron": {"Species": {"Conc": {"@doc": [{"@code": "conc = sim.TET(tet).spec.Conc", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "conc = sim.TETS(tetLst).spec.Conc", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Count": {"@doc": [{"@code": "cnt = sim.TET(tet).spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "cnt = sim.TETS(tetLst).spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}}, "V": {"@doc": [{"@code": "val = sim.TET(tet).V", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "val = sim.TETS(tetLst).V", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}}, "Triangle": {"Capac": {"@doc": [{"@code": "cap = sim.TRI(tri).Capac", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Capac\">capacitance</a> (in F m\u207b\u00b2) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "cap = sim.TRIS(triLst).Capac", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Capac\">capacitance</a> (in F m\u207b\u00b2) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Current": {"I": {"@doc": [{"@code": "val = sim.TRI(tri).curr.I", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.I\">current</a> (in A) of <a href=\"API_model.html#steps.API_2.model.GHKCurr\">GHKCurr</a> <code class=\"py py-class\">curr</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).curr.I", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.I\">current</a> (in A) of <a href=\"API_model.html#steps.API_2.model.GHKCurr\">GHKCurr</a> <code class=\"py py-class\">curr</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "val = sim.TRI(tri).curr.I", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.I\">current</a> (in A) of <a href=\"API_model.html#steps.API_2.model.OhmicCurr\">OhmicCurr</a> <code class=\"py py-class\">curr</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).curr.I", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.I\">current</a> (in A) of <a href=\"API_model.html#steps.API_2.model.OhmicCurr\">OhmicCurr</a> <code class=\"py py-class\">curr</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "Res": {"@doc": [{"@code": "ro, vrev = sim.TRI(tri).Res", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Res\">electrical resistivity</a> of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "ro, vrev = sim.TRIS(triLst).Res", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Res\">electrical resistivity</a> of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Species": {"Count": {"@doc": [{"@code": "cnt = sim.TRI(tri).spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "cnt = sim.TRIS(triLst).spec.Count", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "V": {"@doc": [{"@code": "val = sim.TRI(tri).V", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "val = sim.TRIS(triLst).V", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "Vertex": {"IClamp": {"@doc": [{"@code": "val = sim.VERT(vert).IClamp", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.IClamp\">current clamp</a> (in A) of <a href=\"API_geom.html#steps.API_2.geom.VertReference\">VertReference</a> <code class=\"py py-class\">vert</code>. "}, {"@code": "val = sim.VERTS(vertLst).IClamp", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.IClamp\">current clamp</a> (in A) of each vertex in <a href=\"API_geom.html#steps.API_2.geom.VertList\">VertList</a> <code class=\"py py-class\">vertLst</code>. "}]}, "V": {"@doc": [{"@code": "val = sim.VERT(vert).V", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of <a href=\"API_geom.html#steps.API_2.geom.VertReference\">VertReference</a> <code class=\"py py-class\">vert</code>. "}, {"@code": "val = sim.VERTS(vertLst).V", "@descr": "Get the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of each vertex in <a href=\"API_geom.html#steps.API_2.geom.VertList\">VertList</a> <code class=\"py py-class\">vertLst</code>. "}]}}}}, "set": {"Wmdirect": {"Compartment": {"Amount": {"@doc": [{"@code": "sim.comp.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.comp.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Conc": {"@doc": [{"@code": "sim.comp.Conc = conc", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Count": {"@doc": [{"@code": "sim.comp.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Reaction": {"Active": {"@doc": [{"@code": "sim.comp.reac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "sim.comp.reac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "K": {"@doc": [{"@code": "sim.comp.reac['fwd'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "sim.comp.reac['bkw'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "sim.comp.spec.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.comp.spec.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Conc": {"@doc": [{"@code": "sim.comp.spec.Conc = conc", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Count": {"@doc": [{"@code": "sim.comp.spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Vol": {"@doc": [{"@code": "sim.comp.Vol = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Vol\">volume</a> (in m\u00b3) of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Patch": {"Amount": {"@doc": [{"@code": "sim.patch.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Area": {"@doc": [{"@code": "sim.patch.Area = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Area\">area</a> (in m\u00b2) of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.patch.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Count": {"@doc": [{"@code": "sim.patch.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Reaction": {"Active": {"@doc": [{"@code": "sim.patch.sreac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "sim.patch.sreac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "sim.patch.reac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "sim.patch.reac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "K": {"@doc": [{"@code": "sim.patch.sreac['fwd'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "sim.patch.sreac['bkw'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "sim.patch.spec.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.patch.spec.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Count": {"@doc": [{"@code": "sim.patch.spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}}}}, "Wmrssa": {"Compartment": {"Amount": {"@doc": [{"@code": "sim.comp.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.comp.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Conc": {"@doc": [{"@code": "sim.comp.Conc = conc", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Count": {"@doc": [{"@code": "sim.comp.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Reaction": {"Active": {"@doc": [{"@code": "sim.comp.reac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "sim.comp.reac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "K": {"@doc": [{"@code": "sim.comp.reac['fwd'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "sim.comp.reac['bkw'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "sim.comp.spec.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.comp.spec.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Conc": {"@doc": [{"@code": "sim.comp.spec.Conc = conc", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Count": {"@doc": [{"@code": "sim.comp.spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Vol": {"@doc": [{"@code": "sim.comp.Vol = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Vol\">volume</a> (in m\u00b3) of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Patch": {"Amount": {"@doc": [{"@code": "sim.patch.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Area": {"@doc": [{"@code": "sim.patch.Area = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Area\">area</a> (in m\u00b2) of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.patch.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Count": {"@doc": [{"@code": "sim.patch.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Reaction": {"Active": {"@doc": [{"@code": "sim.patch.sreac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "sim.patch.sreac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "sim.patch.reac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "sim.patch.reac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "K": {"@doc": [{"@code": "sim.patch.sreac['fwd'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "sim.patch.sreac['bkw'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "sim.patch.spec.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.patch.spec.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Count": {"@doc": [{"@code": "sim.patch.spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}}}}, "Wmrk4": {"Compartment": {"Amount": {"@doc": [{"@code": "sim.comp.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.comp.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Conc": {"@doc": [{"@code": "sim.comp.Conc = conc", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Count": {"@doc": [{"@code": "sim.comp.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Reaction": {"Active": {"@doc": [{"@code": "sim.comp.reac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "sim.comp.reac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "K": {"@doc": [{"@code": "sim.comp.reac['fwd'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "sim.comp.reac['bkw'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "sim.comp.spec.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.comp.spec.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Conc": {"@doc": [{"@code": "sim.comp.spec.Conc = conc", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Count": {"@doc": [{"@code": "sim.comp.spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Vol": {"@doc": [{"@code": "sim.comp.Vol = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Vol\">volume</a> (in m\u00b3) of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Patch": {"Amount": {"@doc": [{"@code": "sim.patch.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Area": {"@doc": [{"@code": "sim.patch.Area = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Area\">area</a> (in m\u00b2) of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.patch.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Count": {"@doc": [{"@code": "sim.patch.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Reaction": {"Active": {"@doc": [{"@code": "sim.patch.sreac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "sim.patch.sreac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "sim.patch.reac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "sim.patch.reac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "K": {"@doc": [{"@code": "sim.patch.sreac['fwd'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "sim.patch.sreac['bkw'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "sim.patch.spec.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.patch.spec.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Count": {"@doc": [{"@code": "sim.patch.spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}}}}, "Tetexact": {"Compartment": {"Amount": {"@doc": [{"@code": "sim.comp.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.comp.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Conc": {"@doc": [{"@code": "sim.comp.Conc = conc", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Count": {"@doc": [{"@code": "sim.comp.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Diffusion": {"Active": {"@doc": [{"@code": "sim.comp.diff.Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "D": {"@doc": [{"@code": "sim.comp.diff.D = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Reaction": {"Active": {"@doc": [{"@code": "sim.comp.reac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "sim.comp.reac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "K": {"@doc": [{"@code": "sim.comp.reac['fwd'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "sim.comp.reac['bkw'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "sim.comp.spec.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.comp.spec.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Conc": {"@doc": [{"@code": "sim.comp.spec.Conc = conc", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Count": {"@doc": [{"@code": "sim.comp.spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}}, "Diff. Boundary": {"Dcst": {"@doc": [{"@code": "sim.diffb.Dcst = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Dcst\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_geom.html#steps.API_2.geom.DiffBoundary\">DiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}, "DiffusionActive": {"@doc": [{"@code": "sim.diffb.DiffusionActive = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.DiffusionActive\">diffusion active status</a> of <a href=\"API_geom.html#steps.API_2.geom.DiffBoundary\">DiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}, "Species": {"Dcst": {"@doc": [{"@code": "sim.diffb.spec.Dcst = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Dcst\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.DiffBoundary\">DiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}, "DiffusionActive": {"@doc": [{"@code": "sim.diffb.spec.DiffusionActive = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.DiffusionActive\">diffusion active status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.DiffBoundary\">DiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}}}, "Membrane": {"Capac": {"@doc": [{"@code": "sim.memb.Capac = cap", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Capac\">capacitance</a> (in F m\u207b\u00b2) of <a href=\"API_geom.html#steps.API_2.geom.Membrane\">Membrane</a> <code class=\"py py-class\">memb</code>. "}]}, "Potential": {"@doc": [{"@code": "sim.memb.Potential = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Potential\">potential</a> (in V) of <a href=\"API_geom.html#steps.API_2.geom.Membrane\">Membrane</a> <code class=\"py py-class\">memb</code>. "}]}, "Res": {"@doc": [{"@code": "sim.memb.Res = steps.utils.Params(ro, vrev)", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Res\">electrical resistivity</a> of <a href=\"API_geom.html#steps.API_2.geom.Membrane\">Membrane</a> <code class=\"py py-class\">memb</code>. "}]}, "VolRes": {"@doc": [{"@code": "sim.memb.VolRes = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.VolRes\">bulk electrical resistivity</a> (in ohm m) of <a href=\"API_geom.html#steps.API_2.geom.Membrane\">Membrane</a> <code class=\"py py-class\">memb</code>. "}]}}, "Patch": {"Amount": {"@doc": [{"@code": "sim.patch.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.patch.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Count": {"@doc": [{"@code": "sim.patch.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Reaction": {"Active": {"@doc": [{"@code": "sim.patch.sreac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "sim.patch.sreac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "sim.patch.reac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "sim.patch.reac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "K": {"@doc": [{"@code": "sim.patch.sreac['fwd'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "sim.patch.sreac['bkw'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "sim.patch.spec.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.patch.spec.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Count": {"@doc": [{"@code": "sim.patch.spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}}}, "Region of Interest": {"Amount": {"@doc": [{"@code": "sim.roi.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.roi.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Conc": {"@doc": [{"@code": "sim.roi.Conc = conc", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Count": {"@doc": [{"@code": "sim.roi.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Diffusion": {"Active": {"@doc": [{"@code": "sim.roi.diff.Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "D": {"@doc": [{"@code": "sim.roi.diff.D = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}}, "Reaction": {"Active": {"@doc": [{"@code": "sim.roi.reac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}, {"@code": "sim.roi.reac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}, {"@code": "sim.roi.sreac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}, {"@code": "sim.roi.sreac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}, {"@code": "sim.roi.reac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}, {"@code": "sim.roi.reac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "K": {"@doc": [{"@code": "sim.roi.reac['fwd'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}, {"@code": "sim.roi.reac['bkw'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}, {"@code": "sim.roi.sreac['fwd'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}, {"@code": "sim.roi.sreac['bkw'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "sim.roi.spec.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.roi.spec.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Conc": {"@doc": [{"@code": "sim.roi.spec.Conc = conc", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Count": {"@doc": [{"@code": "sim.roi.spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}}}, "Surf. Diff. Boundary": {"Dcst": {"@doc": [{"@code": "sim.sdiffb.Dcst = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Dcst\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_geom.html#steps.API_2.geom.SDiffBoundary\">SDiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}, "DiffusionActive": {"@doc": [{"@code": "sim.sdiffb.DiffusionActive = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.DiffusionActive\">diffusion active status</a> of <a href=\"API_geom.html#steps.API_2.geom.SDiffBoundary\">SDiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}, "Species": {"Dcst": {"@doc": [{"@code": "sim.sdiffb.spec.Dcst = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Dcst\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.SDiffBoundary\">SDiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}, "DiffusionActive": {"@doc": [{"@code": "sim.sdiffb.spec.DiffusionActive = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.DiffusionActive\">diffusion active status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.SDiffBoundary\">SDiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}}}, "Tetrahedron": {"Amount": {"@doc": [{"@code": "sim.TET(tet).Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.TET(tet).Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Conc": {"@doc": [{"@code": "sim.TET(tet).Conc = conc", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).Conc = conc", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Count": {"@doc": [{"@code": "sim.TET(tet).Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Diffusion": {"Active": {"@doc": [{"@code": "sim.TET(tet).diff.Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).diff.Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "D": {"@doc": [{"@code": "sim.TET(tet).diff.D = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TET(tet).diff(direc=tet2).D = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> diff towards <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet2</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).diff.D = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}}, "Reaction": {"Active": {"@doc": [{"@code": "sim.TET(tet).reac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TET(tet).reac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).reac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}, {"@code": "sim.TETS(tetLst).reac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "K": {"@doc": [{"@code": "sim.TET(tet).reac['fwd'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TET(tet).reac['bkw'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).reac['fwd'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}, {"@code": "sim.TETS(tetLst).reac['bkw'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "sim.TET(tet).spec.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).spec.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.TET(tet).spec.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).spec.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Conc": {"@doc": [{"@code": "sim.TET(tet).spec.Conc = conc", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).spec.Conc = conc", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Count": {"@doc": [{"@code": "sim.TET(tet).spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}}, "V": {"@doc": [{"@code": "sim.TET(tet).V = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).V = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "VClamped": {"@doc": [{"@code": "sim.TET(tet).VClamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).VClamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}}, "Triangle": {"Amount": {"@doc": [{"@code": "sim.TRI(tri).Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Capac": {"@doc": [{"@code": "sim.TRI(tri).Capac = cap", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Capac\">capacitance</a> (in F m\u207b\u00b2) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).Capac = cap", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Capac\">capacitance</a> (in F m\u207b\u00b2) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.TRI(tri).Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Count": {"@doc": [{"@code": "sim.TRI(tri).Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "IClamp": {"@doc": [{"@code": "sim.TRI(tri).IClamp = i", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.IClamp\">current clamp</a> (in A) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).IClamp = i", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.IClamp\">current clamp</a> (in A) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "SDiffD": {"@doc": [{"@code": "sim.TRI(tri).SDiffD = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.SDiffD\">surface diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).SDiffD = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.SDiffD\">surface diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Diffusion": {"D": {"@doc": [{"@code": "sim.TRI(tri).sdiff.D = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRI(tri).sdiff(direc=tri2).D = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> diff towards <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri2</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).sdiff.D = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "Reaction": {"Active": {"@doc": [{"@code": "sim.TRI(tri).sreac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRI(tri).sreac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).sreac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "sim.TRIS(triLst).sreac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "sim.TRI(tri).reac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRI(tri).reac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).reac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "sim.TRIS(triLst).reac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "K": {"@doc": [{"@code": "sim.TRI(tri).sreac['fwd'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRI(tri).sreac['bkw'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).sreac['fwd'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "sim.TRIS(triLst).sreac['bkw'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "sim.TRI(tri).spec.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).spec.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.TRI(tri).spec.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).spec.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Count": {"@doc": [{"@code": "sim.TRI(tri).spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "V": {"@doc": [{"@code": "sim.TRI(tri).V = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).V = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "VClamped": {"@doc": [{"@code": "sim.TRI(tri).VClamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).VClamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "Vertex": {"IClamp": {"@doc": [{"@code": "sim.VERT(vert).IClamp = i", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.IClamp\">current clamp</a> (in A) of <a href=\"API_geom.html#steps.API_2.geom.VertReference\">VertReference</a> <code class=\"py py-class\">vert</code>. "}, {"@code": "sim.VERTS(vertLst).IClamp = i", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.IClamp\">current clamp</a> (in A) of each vertex in <a href=\"API_geom.html#steps.API_2.geom.VertList\">VertList</a> <code class=\"py py-class\">vertLst</code>. "}]}, "V": {"@doc": [{"@code": "sim.VERT(vert).V = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of <a href=\"API_geom.html#steps.API_2.geom.VertReference\">VertReference</a> <code class=\"py py-class\">vert</code>. "}, {"@code": "sim.VERTS(vertLst).V = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of each vertex in <a href=\"API_geom.html#steps.API_2.geom.VertList\">VertList</a> <code class=\"py py-class\">vertLst</code>. "}]}, "VClamped": {"@doc": [{"@code": "sim.VERT(vert).VClamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of <a href=\"API_geom.html#steps.API_2.geom.VertReference\">VertReference</a> <code class=\"py py-class\">vert</code>. "}, {"@code": "sim.VERTS(vertLst).VClamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of each vertex in <a href=\"API_geom.html#steps.API_2.geom.VertList\">VertList</a> <code class=\"py py-class\">vertLst</code>. "}]}}}, "TetODE": {"Compartment": {"Amount": {"@doc": [{"@code": "sim.comp.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.comp.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Conc": {"@doc": [{"@code": "sim.comp.Conc = conc", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Count": {"@doc": [{"@code": "sim.comp.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Diffusion": {"Active": {"@doc": [{"@code": "sim.comp.diff.Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "D": {"@doc": [{"@code": "sim.comp.diff.D = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Reaction": {"Active": {"@doc": [{"@code": "sim.comp.reac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "sim.comp.reac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "K": {"@doc": [{"@code": "sim.comp.reac['fwd'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "sim.comp.reac['bkw'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "sim.comp.spec.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.comp.spec.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Conc": {"@doc": [{"@code": "sim.comp.spec.Conc = conc", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Count": {"@doc": [{"@code": "sim.comp.spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}}, "Diff. Boundary": {"Dcst": {"@doc": [{"@code": "sim.diffb.Dcst = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Dcst\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_geom.html#steps.API_2.geom.DiffBoundary\">DiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}, "DiffusionActive": {"@doc": [{"@code": "sim.diffb.DiffusionActive = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.DiffusionActive\">diffusion active status</a> of <a href=\"API_geom.html#steps.API_2.geom.DiffBoundary\">DiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}, "Species": {"Dcst": {"@doc": [{"@code": "sim.diffb.spec.Dcst = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Dcst\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.DiffBoundary\">DiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}, "DiffusionActive": {"@doc": [{"@code": "sim.diffb.spec.DiffusionActive = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.DiffusionActive\">diffusion active status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.DiffBoundary\">DiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}}}, "Membrane": {"Capac": {"@doc": [{"@code": "sim.memb.Capac = cap", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Capac\">capacitance</a> (in F m\u207b\u00b2) of <a href=\"API_geom.html#steps.API_2.geom.Membrane\">Membrane</a> <code class=\"py py-class\">memb</code>. "}]}, "Potential": {"@doc": [{"@code": "sim.memb.Potential = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Potential\">potential</a> (in V) of <a href=\"API_geom.html#steps.API_2.geom.Membrane\">Membrane</a> <code class=\"py py-class\">memb</code>. "}]}, "Res": {"@doc": [{"@code": "sim.memb.Res = steps.utils.Params(ro, vrev)", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Res\">electrical resistivity</a> of <a href=\"API_geom.html#steps.API_2.geom.Membrane\">Membrane</a> <code class=\"py py-class\">memb</code>. "}]}, "VolRes": {"@doc": [{"@code": "sim.memb.VolRes = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.VolRes\">bulk electrical resistivity</a> (in ohm m) of <a href=\"API_geom.html#steps.API_2.geom.Membrane\">Membrane</a> <code class=\"py py-class\">memb</code>. "}]}}, "Patch": {"Amount": {"@doc": [{"@code": "sim.patch.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.patch.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Count": {"@doc": [{"@code": "sim.patch.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Reaction": {"Active": {"@doc": [{"@code": "sim.patch.sreac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "sim.patch.sreac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "sim.patch.reac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "sim.patch.reac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "K": {"@doc": [{"@code": "sim.patch.sreac['fwd'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "sim.patch.sreac['bkw'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "sim.patch.spec.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.patch.spec.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Count": {"@doc": [{"@code": "sim.patch.spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}}}, "Region of Interest": {"Amount": {"@doc": [{"@code": "sim.roi.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.roi.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Conc": {"@doc": [{"@code": "sim.roi.Conc = conc", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Count": {"@doc": [{"@code": "sim.roi.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}}, "Surf. Diff. Boundary": {"Dcst": {"@doc": [{"@code": "sim.sdiffb.Dcst = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Dcst\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_geom.html#steps.API_2.geom.SDiffBoundary\">SDiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}, "DiffusionActive": {"@doc": [{"@code": "sim.sdiffb.DiffusionActive = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.DiffusionActive\">diffusion active status</a> of <a href=\"API_geom.html#steps.API_2.geom.SDiffBoundary\">SDiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}, "Species": {"Dcst": {"@doc": [{"@code": "sim.sdiffb.spec.Dcst = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Dcst\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.SDiffBoundary\">SDiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}, "DiffusionActive": {"@doc": [{"@code": "sim.sdiffb.spec.DiffusionActive = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.DiffusionActive\">diffusion active status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.SDiffBoundary\">SDiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}}}, "Tetrahedron": {"Amount": {"@doc": [{"@code": "sim.TET(tet).Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.TET(tet).Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Conc": {"@doc": [{"@code": "sim.TET(tet).Conc = conc", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).Conc = conc", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Count": {"@doc": [{"@code": "sim.TET(tet).Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Diffusion": {"Active": {"@doc": [{"@code": "sim.TET(tet).diff.Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).diff.Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "D": {"@doc": [{"@code": "sim.TET(tet).diff.D = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TET(tet).diff(direc=tet2).D = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> diff towards <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet2</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).diff.D = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}}, "Reaction": {"Active": {"@doc": [{"@code": "sim.TET(tet).reac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TET(tet).reac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).reac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}, {"@code": "sim.TETS(tetLst).reac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "K": {"@doc": [{"@code": "sim.TET(tet).reac['fwd'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TET(tet).reac['bkw'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).reac['fwd'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}, {"@code": "sim.TETS(tetLst).reac['bkw'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "sim.TET(tet).spec.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).spec.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.TET(tet).spec.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).spec.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Conc": {"@doc": [{"@code": "sim.TET(tet).spec.Conc = conc", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).spec.Conc = conc", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Count": {"@doc": [{"@code": "sim.TET(tet).spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}}, "V": {"@doc": [{"@code": "sim.TET(tet).V = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).V = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "VClamped": {"@doc": [{"@code": "sim.TET(tet).VClamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).VClamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}}, "Triangle": {"Amount": {"@doc": [{"@code": "sim.TRI(tri).Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Capac": {"@doc": [{"@code": "sim.TRI(tri).Capac = cap", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Capac\">capacitance</a> (in F m\u207b\u00b2) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).Capac = cap", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Capac\">capacitance</a> (in F m\u207b\u00b2) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.TRI(tri).Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Count": {"@doc": [{"@code": "sim.TRI(tri).Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "IClamp": {"@doc": [{"@code": "sim.TRI(tri).IClamp = i", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.IClamp\">current clamp</a> (in A) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).IClamp = i", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.IClamp\">current clamp</a> (in A) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "SDiffD": {"@doc": [{"@code": "sim.TRI(tri).SDiffD = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.SDiffD\">surface diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).SDiffD = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.SDiffD\">surface diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Diffusion": {"D": {"@doc": [{"@code": "sim.TRI(tri).sdiff.D = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRI(tri).sdiff(direc=tri2).D = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> diff towards <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri2</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).sdiff.D = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "Reaction": {"Active": {"@doc": [{"@code": "sim.TRI(tri).sreac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRI(tri).sreac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).sreac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "sim.TRIS(triLst).sreac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "sim.TRI(tri).reac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRI(tri).reac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).reac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "sim.TRIS(triLst).reac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "K": {"@doc": [{"@code": "sim.TRI(tri).sreac['fwd'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRI(tri).sreac['bkw'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).sreac['fwd'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "sim.TRIS(triLst).sreac['bkw'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "sim.TRI(tri).spec.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).spec.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.TRI(tri).spec.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).spec.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Count": {"@doc": [{"@code": "sim.TRI(tri).spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "V": {"@doc": [{"@code": "sim.TRI(tri).V = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).V = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "VClamped": {"@doc": [{"@code": "sim.TRI(tri).VClamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).VClamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "Vertex": {"IClamp": {"@doc": [{"@code": "sim.VERT(vert).IClamp = i", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.IClamp\">current clamp</a> (in A) of <a href=\"API_geom.html#steps.API_2.geom.VertReference\">VertReference</a> <code class=\"py py-class\">vert</code>. "}, {"@code": "sim.VERTS(vertLst).IClamp = i", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.IClamp\">current clamp</a> (in A) of each vertex in <a href=\"API_geom.html#steps.API_2.geom.VertList\">VertList</a> <code class=\"py py-class\">vertLst</code>. "}]}, "V": {"@doc": [{"@code": "sim.VERT(vert).V = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of <a href=\"API_geom.html#steps.API_2.geom.VertReference\">VertReference</a> <code class=\"py py-class\">vert</code>. "}, {"@code": "sim.VERTS(vertLst).V = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of each vertex in <a href=\"API_geom.html#steps.API_2.geom.VertList\">VertList</a> <code class=\"py py-class\">vertLst</code>. "}]}, "VClamped": {"@doc": [{"@code": "sim.VERT(vert).VClamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of <a href=\"API_geom.html#steps.API_2.geom.VertReference\">VertReference</a> <code class=\"py py-class\">vert</code>. "}, {"@code": "sim.VERTS(vertLst).VClamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of each vertex in <a href=\"API_geom.html#steps.API_2.geom.VertList\">VertList</a> <code class=\"py py-class\">vertLst</code>. "}]}}}, "TetOpSplit": {"Compartment": {"Amount": {"@doc": [{"@code": "sim.comp.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.comp.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Conc": {"@doc": [{"@code": "sim.comp.Conc = conc", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Count": {"@doc": [{"@code": "sim.comp.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Diffusion": {"Active": {"@doc": [{"@code": "sim.comp.diff.Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "D": {"@doc": [{"@code": "sim.comp.diff.D = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Reaction": {"Active": {"@doc": [{"@code": "sim.comp.reac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "sim.comp.reac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "K": {"@doc": [{"@code": "sim.comp.reac['fwd'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "sim.comp.reac['bkw'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "sim.comp.spec.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.comp.spec.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Conc": {"@doc": [{"@code": "sim.comp.spec.Conc = conc", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Count": {"@doc": [{"@code": "sim.comp.spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}}, "Diff. Boundary": {"Dcst": {"@doc": [{"@code": "sim.diffb.Dcst = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Dcst\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_geom.html#steps.API_2.geom.DiffBoundary\">DiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}, "DiffusionActive": {"@doc": [{"@code": "sim.diffb.DiffusionActive = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.DiffusionActive\">diffusion active status</a> of <a href=\"API_geom.html#steps.API_2.geom.DiffBoundary\">DiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}, "Species": {"Dcst": {"@doc": [{"@code": "sim.diffb.spec.Dcst = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Dcst\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.DiffBoundary\">DiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}, "DiffusionActive": {"@doc": [{"@code": "sim.diffb.spec.DiffusionActive = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.DiffusionActive\">diffusion active status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.DiffBoundary\">DiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}}}, "Membrane": {"Capac": {"@doc": [{"@code": "sim.memb.Capac = cap", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Capac\">capacitance</a> (in F m\u207b\u00b2) of <a href=\"API_geom.html#steps.API_2.geom.Membrane\">Membrane</a> <code class=\"py py-class\">memb</code>. "}]}, "Potential": {"@doc": [{"@code": "sim.memb.Potential = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Potential\">potential</a> (in V) of <a href=\"API_geom.html#steps.API_2.geom.Membrane\">Membrane</a> <code class=\"py py-class\">memb</code>. "}]}, "Res": {"@doc": [{"@code": "sim.memb.Res = steps.utils.Params(ro, vrev)", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Res\">electrical resistivity</a> of <a href=\"API_geom.html#steps.API_2.geom.Membrane\">Membrane</a> <code class=\"py py-class\">memb</code>. "}]}, "VolRes": {"@doc": [{"@code": "sim.memb.VolRes = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.VolRes\">bulk electrical resistivity</a> (in ohm m) of <a href=\"API_geom.html#steps.API_2.geom.Membrane\">Membrane</a> <code class=\"py py-class\">memb</code>. "}]}}, "Patch": {"Amount": {"@doc": [{"@code": "sim.patch.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.patch.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Count": {"@doc": [{"@code": "sim.patch.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Reaction": {"Active": {"@doc": [{"@code": "sim.patch.sreac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "sim.patch.sreac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "sim.patch.reac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "sim.patch.reac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "K": {"@doc": [{"@code": "sim.patch.sreac['fwd'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "sim.patch.sreac['bkw'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "sim.patch.spec.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.patch.spec.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Count": {"@doc": [{"@code": "sim.patch.spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}}}, "Region of Interest": {"Amount": {"@doc": [{"@code": "sim.roi.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.roi.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Conc": {"@doc": [{"@code": "sim.roi.Conc = conc", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Count": {"@doc": [{"@code": "sim.roi.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Diffusion": {"Active": {"@doc": [{"@code": "sim.roi.diff.Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "D": {"@doc": [{"@code": "sim.roi.diff.D = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}}, "Reaction": {"Active": {"@doc": [{"@code": "sim.roi.reac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}, {"@code": "sim.roi.reac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}, {"@code": "sim.roi.sreac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}, {"@code": "sim.roi.sreac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}, {"@code": "sim.roi.reac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}, {"@code": "sim.roi.reac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "K": {"@doc": [{"@code": "sim.roi.reac['fwd'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}, {"@code": "sim.roi.reac['bkw'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}, {"@code": "sim.roi.sreac['fwd'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}, {"@code": "sim.roi.sreac['bkw'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "sim.roi.spec.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.roi.spec.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Conc": {"@doc": [{"@code": "sim.roi.spec.Conc = conc", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Count": {"@doc": [{"@code": "sim.roi.spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}}}, "Surf. Diff. Boundary": {"Dcst": {"@doc": [{"@code": "sim.sdiffb.Dcst = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Dcst\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_geom.html#steps.API_2.geom.SDiffBoundary\">SDiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}, "DiffusionActive": {"@doc": [{"@code": "sim.sdiffb.DiffusionActive = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.DiffusionActive\">diffusion active status</a> of <a href=\"API_geom.html#steps.API_2.geom.SDiffBoundary\">SDiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}, "Species": {"Dcst": {"@doc": [{"@code": "sim.sdiffb.spec.Dcst = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Dcst\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.SDiffBoundary\">SDiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}, "DiffusionActive": {"@doc": [{"@code": "sim.sdiffb.spec.DiffusionActive = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.DiffusionActive\">diffusion active status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.SDiffBoundary\">SDiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}}}, "Tetrahedron": {"Amount": {"@doc": [{"@code": "sim.TET(tet).Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.TET(tet).Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Conc": {"@doc": [{"@code": "sim.TET(tet).Conc = conc", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).Conc = conc", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Count": {"@doc": [{"@code": "sim.TET(tet).Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Diffusion": {"Active": {"@doc": [{"@code": "sim.TET(tet).diff.Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).diff.Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "D": {"@doc": [{"@code": "sim.TET(tet).diff.D = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TET(tet).diff(direc=tet2).D = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> diff towards <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet2</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).diff.D = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}}, "Reaction": {"Active": {"@doc": [{"@code": "sim.TET(tet).reac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TET(tet).reac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).reac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}, {"@code": "sim.TETS(tetLst).reac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "K": {"@doc": [{"@code": "sim.TET(tet).reac['fwd'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TET(tet).reac['bkw'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).reac['fwd'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}, {"@code": "sim.TETS(tetLst).reac['bkw'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "sim.TET(tet).spec.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).spec.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.TET(tet).spec.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).spec.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Conc": {"@doc": [{"@code": "sim.TET(tet).spec.Conc = conc", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).spec.Conc = conc", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Count": {"@doc": [{"@code": "sim.TET(tet).spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}}, "V": {"@doc": [{"@code": "sim.TET(tet).V = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).V = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "VClamped": {"@doc": [{"@code": "sim.TET(tet).VClamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).VClamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}}, "Triangle": {"Amount": {"@doc": [{"@code": "sim.TRI(tri).Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Capac": {"@doc": [{"@code": "sim.TRI(tri).Capac = cap", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Capac\">capacitance</a> (in F m\u207b\u00b2) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).Capac = cap", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Capac\">capacitance</a> (in F m\u207b\u00b2) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.TRI(tri).Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Count": {"@doc": [{"@code": "sim.TRI(tri).Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "IClamp": {"@doc": [{"@code": "sim.TRI(tri).IClamp = i", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.IClamp\">current clamp</a> (in A) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).IClamp = i", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.IClamp\">current clamp</a> (in A) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "SDiffD": {"@doc": [{"@code": "sim.TRI(tri).SDiffD = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.SDiffD\">surface diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).SDiffD = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.SDiffD\">surface diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Diffusion": {"D": {"@doc": [{"@code": "sim.TRI(tri).sdiff.D = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRI(tri).sdiff(direc=tri2).D = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> diff towards <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri2</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).sdiff.D = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "Reaction": {"Active": {"@doc": [{"@code": "sim.TRI(tri).sreac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRI(tri).sreac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).sreac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "sim.TRIS(triLst).sreac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "sim.TRI(tri).reac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRI(tri).reac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).reac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "sim.TRIS(triLst).reac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "K": {"@doc": [{"@code": "sim.TRI(tri).sreac['fwd'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRI(tri).sreac['bkw'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).sreac['fwd'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "sim.TRIS(triLst).sreac['bkw'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "sim.TRI(tri).spec.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).spec.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.TRI(tri).spec.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).spec.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Count": {"@doc": [{"@code": "sim.TRI(tri).spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "V": {"@doc": [{"@code": "sim.TRI(tri).V = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).V = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "VClamped": {"@doc": [{"@code": "sim.TRI(tri).VClamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).VClamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "Vertex": {"IClamp": {"@doc": [{"@code": "sim.VERT(vert).IClamp = i", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.IClamp\">current clamp</a> (in A) of <a href=\"API_geom.html#steps.API_2.geom.VertReference\">VertReference</a> <code class=\"py py-class\">vert</code>. "}, {"@code": "sim.VERTS(vertLst).IClamp = i", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.IClamp\">current clamp</a> (in A) of each vertex in <a href=\"API_geom.html#steps.API_2.geom.VertList\">VertList</a> <code class=\"py py-class\">vertLst</code>. "}]}, "V": {"@doc": [{"@code": "sim.VERT(vert).V = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of <a href=\"API_geom.html#steps.API_2.geom.VertReference\">VertReference</a> <code class=\"py py-class\">vert</code>. "}, {"@code": "sim.VERTS(vertLst).V = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of each vertex in <a href=\"API_geom.html#steps.API_2.geom.VertList\">VertList</a> <code class=\"py py-class\">vertLst</code>. "}]}, "VClamped": {"@doc": [{"@code": "sim.VERT(vert).VClamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of <a href=\"API_geom.html#steps.API_2.geom.VertReference\">VertReference</a> <code class=\"py py-class\">vert</code>. "}, {"@code": "sim.VERTS(vertLst).VClamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of each vertex in <a href=\"API_geom.html#steps.API_2.geom.VertList\">VertList</a> <code class=\"py py-class\">vertLst</code>. "}]}}}, "TetVesicle": {"Compartment": {"Amount": {"@doc": [{"@code": "sim.comp.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.comp.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Conc": {"@doc": [{"@code": "sim.comp.Conc = conc", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Count": {"@doc": [{"@code": "sim.comp.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Diffusion": {"Active": {"@doc": [{"@code": "sim.comp.diff.Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "D": {"@doc": [{"@code": "sim.comp.diff.D = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Reaction": {"Active": {"@doc": [{"@code": "sim.comp.reac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "sim.comp.reac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "K": {"@doc": [{"@code": "sim.comp.reac['fwd'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "sim.comp.reac['bkw'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}, "Specific Vesicle": {"Pos": {"@doc": [{"@code": "sim.comp.VESICLE(vesref).Pos = pos", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Pos\">position in cartesian coordinates</a> of <a href=\"API_sim.html#steps.API_2.sim.VesicleReference\">VesicleReference</a> <code class=\"py py-class\">vesref</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "sim.comp.VESICLES(vesLst).Pos = pos", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Pos\">position in cartesian coordinates</a> of each vesicle in <a href=\"API_sim.html#steps.API_2.sim.VesicleList\">VesicleList</a> <code class=\"py py-class\">vesLst</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "sim.comp.VESICLE(vesref).Pos = steps.utils.Params(pos, force=True)", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Pos\">position in cartesian coordinates</a> of <a href=\"API_sim.html#steps.API_2.sim.VesicleReference\">VesicleReference</a> <code class=\"py py-class\">vesref</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. When <code class=\"py py-class\">force</code> is set to <code class=\"py py-class\">True</code>, the vesicle is swapped with any vesicle that would prevent it from changing its position"}, {"@code": "sim.comp.VESICLES(vesLst).Pos = steps.utils.Params(pos, force=True)", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Pos\">position in cartesian coordinates</a> of each vesicle in <a href=\"API_sim.html#steps.API_2.sim.VesicleList\">VesicleList</a> <code class=\"py py-class\">vesLst</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. When <code class=\"py py-class\">force</code> is set to <code class=\"py py-class\">True</code>, the vesicle is swapped with any vesicle that would prevent it from changing its position"}]}}, "Species": {"Amount": {"@doc": [{"@code": "sim.comp.spec.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.comp.spec.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Conc": {"@doc": [{"@code": "sim.comp.spec.Conc = conc", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}, "Count": {"@doc": [{"@code": "sim.comp.spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}]}}}, "Diff. Boundary": {"Dcst": {"@doc": [{"@code": "sim.diffb.Dcst = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Dcst\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_geom.html#steps.API_2.geom.DiffBoundary\">DiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}, "DiffusionActive": {"@doc": [{"@code": "sim.diffb.DiffusionActive = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.DiffusionActive\">diffusion active status</a> of <a href=\"API_geom.html#steps.API_2.geom.DiffBoundary\">DiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}, "Species": {"Dcst": {"@doc": [{"@code": "sim.diffb.spec.Dcst = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Dcst\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.DiffBoundary\">DiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}, "DiffusionActive": {"@doc": [{"@code": "sim.diffb.spec.DiffusionActive = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.DiffusionActive\">diffusion active status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.DiffBoundary\">DiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}}}, "Exocytosis": {"K": {"@doc": [{"@code": "sim.exo.K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">rate</a> of <a href=\"API_model.html#steps.API_2.model.Exocytosis\">Exocytosis</a> <code class=\"py py-class\">exo</code>. "}]}}, "Membrane": {"Capac": {"@doc": [{"@code": "sim.memb.Capac = cap", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Capac\">capacitance</a> (in F m\u207b\u00b2) of <a href=\"API_geom.html#steps.API_2.geom.Membrane\">Membrane</a> <code class=\"py py-class\">memb</code>. "}]}, "Potential": {"@doc": [{"@code": "sim.memb.Potential = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Potential\">potential</a> (in V) of <a href=\"API_geom.html#steps.API_2.geom.Membrane\">Membrane</a> <code class=\"py py-class\">memb</code>. "}]}, "Res": {"@doc": [{"@code": "sim.memb.Res = steps.utils.Params(ro, vrev)", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Res\">electrical resistivity</a> of <a href=\"API_geom.html#steps.API_2.geom.Membrane\">Membrane</a> <code class=\"py py-class\">memb</code>. "}]}, "VolRes": {"@doc": [{"@code": "sim.memb.VolRes = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.VolRes\">bulk electrical resistivity</a> (in ohm m) of <a href=\"API_geom.html#steps.API_2.geom.Membrane\">Membrane</a> <code class=\"py py-class\">memb</code>. "}]}}, "Patch": {"Amount": {"@doc": [{"@code": "sim.patch.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.patch.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Count": {"@doc": [{"@code": "sim.patch.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Raft type": {"Count": {"@doc": [{"@code": "sim.patch.raft.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Raft\">Raft</a>s of type <code class=\"py py-class\">raft</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}}, "Reaction": {"Active": {"@doc": [{"@code": "sim.patch.sreac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "sim.patch.sreac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "sim.patch.reac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "sim.patch.reac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "K": {"@doc": [{"@code": "sim.patch.sreac['fwd'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "sim.patch.sreac['bkw'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "sim.patch.spec.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.patch.spec.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}, "Count": {"@doc": [{"@code": "sim.patch.spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}}}, "Region of Interest": {"Amount": {"@doc": [{"@code": "sim.roi.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.roi.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Conc": {"@doc": [{"@code": "sim.roi.Conc = conc", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Count": {"@doc": [{"@code": "sim.roi.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Diffusion": {"Active": {"@doc": [{"@code": "sim.roi.diff.Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "D": {"@doc": [{"@code": "sim.roi.diff.D = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}}, "Reaction": {"Active": {"@doc": [{"@code": "sim.roi.reac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}, {"@code": "sim.roi.reac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}, {"@code": "sim.roi.sreac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}, {"@code": "sim.roi.sreac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}, {"@code": "sim.roi.reac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}, {"@code": "sim.roi.reac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "K": {"@doc": [{"@code": "sim.roi.reac['fwd'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}, {"@code": "sim.roi.reac['bkw'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}, {"@code": "sim.roi.sreac['fwd'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}, {"@code": "sim.roi.sreac['bkw'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "sim.roi.spec.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.roi.spec.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Conc": {"@doc": [{"@code": "sim.roi.spec.Conc = conc", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Count": {"@doc": [{"@code": "sim.roi.spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}}, "Tetrahedron": {"Species": {"Clamped": {"@doc": [{"@code": "sim.roi.TET(tet).spec.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}, {"@code": "sim.roi.TETS(tetLst).spec.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Count": {"@doc": [{"@code": "sim.roi.TET(tet).spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}, {"@code": "sim.roi.TETS(tetLst).spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}}}, "Triangle": {"Species": {"Clamped": {"@doc": [{"@code": "sim.roi.TRI(tri).spec.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}, {"@code": "sim.roi.TRIS(triLst).spec.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}, "Count": {"@doc": [{"@code": "sim.roi.TRI(tri).spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}, {"@code": "sim.roi.TRIS(triLst).spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code> in <a href=\"API_geom.html#steps.API_2.geom.ROI\">ROI</a> <code class=\"py py-class\">roi</code>. "}]}}}}, "Raft Endocytosis": {"K": {"@doc": [{"@code": "sim.rendo.K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">rate</a> of <a href=\"API_model.html#steps.API_2.model.RaftEndocytosis\">RaftEndocytosis</a> <code class=\"py py-class\">rendo</code>. "}]}}, "Surf. Diff. Boundary": {"Dcst": {"@doc": [{"@code": "sim.sdiffb.Dcst = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Dcst\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_geom.html#steps.API_2.geom.SDiffBoundary\">SDiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}, "DiffusionActive": {"@doc": [{"@code": "sim.sdiffb.DiffusionActive = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.DiffusionActive\">diffusion active status</a> of <a href=\"API_geom.html#steps.API_2.geom.SDiffBoundary\">SDiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}, "Species": {"Dcst": {"@doc": [{"@code": "sim.sdiffb.spec.Dcst = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Dcst\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.SDiffBoundary\">SDiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}, "DiffusionActive": {"@doc": [{"@code": "sim.sdiffb.spec.DiffusionActive = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.DiffusionActive\">diffusion active status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.SDiffBoundary\">SDiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}}}, "Specific Raft": {"Raft Endocytosis": {"K": {"@doc": [{"@code": "sim.RAFT(raftref).rendo.K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">rate</a> of <a href=\"API_model.html#steps.API_2.model.RaftEndocytosis\">RaftEndocytosis</a> <code class=\"py py-class\">rendo</code> in <a href=\"API_sim.html#steps.API_2.sim.RaftReference\">RaftReference</a> <code class=\"py py-class\">raftref</code>. "}, {"@code": "sim.RAFTS(raftLst).rendo.K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">rate</a> of <a href=\"API_model.html#steps.API_2.model.RaftEndocytosis\">RaftEndocytosis</a> <code class=\"py py-class\">rendo</code> in each raft in <a href=\"API_sim.html#steps.API_2.sim.RaftList\">RaftList</a> <code class=\"py py-class\">raftLst</code>. "}]}}, "Reaction": {"Active": {"@doc": [{"@code": "sim.RAFT(raftref).sreac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_sim.html#steps.API_2.sim.RaftReference\">RaftReference</a> <code class=\"py py-class\">raftref</code>. "}, {"@code": "sim.RAFT(raftref).sreac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_sim.html#steps.API_2.sim.RaftReference\">RaftReference</a> <code class=\"py py-class\">raftref</code>. "}, {"@code": "sim.RAFTS(raftLst).sreac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each raft in <a href=\"API_sim.html#steps.API_2.sim.RaftList\">RaftList</a> <code class=\"py py-class\">raftLst</code>. "}, {"@code": "sim.RAFTS(raftLst).sreac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each raft in <a href=\"API_sim.html#steps.API_2.sim.RaftList\">RaftList</a> <code class=\"py py-class\">raftLst</code>. "}]}}, "Species": {"Count": {"@doc": [{"@code": "sim.RAFT(raftref).spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_sim.html#steps.API_2.sim.RaftReference\">RaftReference</a> <code class=\"py py-class\">raftref</code>. "}, {"@code": "sim.RAFTS(raftLst).spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each raft in <a href=\"API_sim.html#steps.API_2.sim.RaftList\">RaftList</a> <code class=\"py py-class\">raftLst</code>. "}]}}}, "Specific Vesicle": {"Species": {"Count": {"@doc": [{"@code": "sim.VESICLE(vesref)('in').spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in the lumen of <a href=\"API_sim.html#steps.API_2.sim.VesicleReference\">VesicleReference</a> <code class=\"py py-class\">vesref</code>. "}, {"@code": "sim.VESICLES(vesLst)('in').spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in the lumen of each vesicle in <a href=\"API_sim.html#steps.API_2.sim.VesicleList\">VesicleList</a> <code class=\"py py-class\">vesLst</code>. "}, {"@code": "sim.VESICLE(vesref)('surf').spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in the surface of <a href=\"API_sim.html#steps.API_2.sim.VesicleReference\">VesicleReference</a> <code class=\"py py-class\">vesref</code>. "}, {"@code": "sim.VESICLES(vesLst)('surf').spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in the surface of each vesicle in <a href=\"API_sim.html#steps.API_2.sim.VesicleList\">VesicleList</a> <code class=\"py py-class\">vesLst</code>. "}]}, "PosSpherical": {"@doc": [{"@code": "sim.VESICLE(vesref)('surf').spec.PosSpherical = spos", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.PosSpherical\">position in spherical coordinated</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in the surface of <a href=\"API_sim.html#steps.API_2.sim.VesicleReference\">VesicleReference</a> <code class=\"py py-class\">vesref</code>. "}, {"@code": "sim.VESICLES(vesLst)('surf').spec.PosSpherical = spos", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.PosSpherical\">position in spherical coordinated</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in the surface of each vesicle in <a href=\"API_sim.html#steps.API_2.sim.VesicleList\">VesicleList</a> <code class=\"py py-class\">vesLst</code>. "}]}}, "Pos": {"@doc": [{"@code": "sim.VESICLE(vesref).Pos = pos", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Pos\">position in cartesian coordinates</a> of <a href=\"API_sim.html#steps.API_2.sim.VesicleReference\">VesicleReference</a> <code class=\"py py-class\">vesref</code>. "}, {"@code": "sim.VESICLES(vesLst).Pos = pos", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Pos\">position in cartesian coordinates</a> of each vesicle in <a href=\"API_sim.html#steps.API_2.sim.VesicleList\">VesicleList</a> <code class=\"py py-class\">vesLst</code>. "}, {"@code": "sim.VESICLE(vesref).Pos = steps.utils.Params(pos, force=True)", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Pos\">position in cartesian coordinates</a> of <a href=\"API_sim.html#steps.API_2.sim.VesicleReference\">VesicleReference</a> <code class=\"py py-class\">vesref</code>. When <code class=\"py py-class\">force</code> is set to <code class=\"py py-class\">True</code>, the vesicle is swapped with any vesicle that would prevent it from changing its position"}, {"@code": "sim.VESICLES(vesLst).Pos = steps.utils.Params(pos, force=True)", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Pos\">position in cartesian coordinates</a> of each vesicle in <a href=\"API_sim.html#steps.API_2.sim.VesicleList\">VesicleList</a> <code class=\"py py-class\">vesLst</code>. When <code class=\"py py-class\">force</code> is set to <code class=\"py py-class\">True</code>, the vesicle is swapped with any vesicle that would prevent it from changing its position"}]}}, "Tetrahedron": {"Amount": {"@doc": [{"@code": "sim.TET(tet).Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.TET(tet).Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Conc": {"@doc": [{"@code": "sim.TET(tet).Conc = conc", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).Conc = conc", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Count": {"@doc": [{"@code": "sim.TET(tet).Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Diffusion": {"Active": {"@doc": [{"@code": "sim.TET(tet).diff.Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).diff.Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "D": {"@doc": [{"@code": "sim.TET(tet).diff.D = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TET(tet).diff(direc=tet2).D = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> diff towards <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet2</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).diff.D = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}}, "Reaction": {"Active": {"@doc": [{"@code": "sim.TET(tet).reac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TET(tet).reac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).reac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}, {"@code": "sim.TETS(tetLst).reac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "K": {"@doc": [{"@code": "sim.TET(tet).reac['fwd'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TET(tet).reac['bkw'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).reac['fwd'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}, {"@code": "sim.TETS(tetLst).reac['bkw'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "sim.TET(tet).spec.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).spec.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.TET(tet).spec.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).spec.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Conc": {"@doc": [{"@code": "sim.TET(tet).spec.Conc = conc", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).spec.Conc = conc", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Count": {"@doc": [{"@code": "sim.TET(tet).spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}}, "V": {"@doc": [{"@code": "sim.TET(tet).V = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).V = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "VClamped": {"@doc": [{"@code": "sim.TET(tet).VClamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).VClamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Vol": {"@doc": [{"@code": "sim.TET(tet).Vol = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Vol\">volume</a> (in m\u00b3) of <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).Vol = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Vol\">volume</a> (in m\u00b3) of each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}}, "Triangle": {"Amount": {"@doc": [{"@code": "sim.TRI(tri).Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Area": {"@doc": [{"@code": "sim.TRI(tri).Area = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Area\">area</a> (in m\u00b2) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).Area = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Area\">area</a> (in m\u00b2) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Capac": {"@doc": [{"@code": "sim.TRI(tri).Capac = cap", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Capac\">capacitance</a> (in F m\u207b\u00b2) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).Capac = cap", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Capac\">capacitance</a> (in F m\u207b\u00b2) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.TRI(tri).Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Count": {"@doc": [{"@code": "sim.TRI(tri).Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Diffusion": {"D": {"@doc": [{"@code": "sim.TRI(tri).diff.D = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).diff.D = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "sim.TRI(tri).sdiff.D = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRI(tri).sdiff(direc=tri2).D = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> diff towards <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri2</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).sdiff.D = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "Exocytosis": {"Active": {"@doc": [{"@code": "sim.TRI(tri).exo.Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of <a href=\"API_model.html#steps.API_2.model.Exocytosis\">Exocytosis</a> <code class=\"py py-class\">exo</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).exo.Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of <a href=\"API_model.html#steps.API_2.model.Exocytosis\">Exocytosis</a> <code class=\"py py-class\">exo</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "IClamp": {"@doc": [{"@code": "sim.TRI(tri).IClamp = i", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.IClamp\">current clamp</a> (in A) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).IClamp = i", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.IClamp\">current clamp</a> (in A) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Raft type": {"Count": {"@doc": [{"@code": "sim.TRI(tri).raft.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Raft\">Raft</a>s of type <code class=\"py py-class\">raft</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).raft.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Raft\">Raft</a>s of type <code class=\"py py-class\">raft</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "SDiffD": {"@doc": [{"@code": "sim.TRI(tri).SDiffD = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.SDiffD\">surface diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).SDiffD = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.SDiffD\">surface diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Reaction": {"Active": {"@doc": [{"@code": "sim.TRI(tri).sreac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRI(tri).sreac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).sreac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "sim.TRIS(triLst).sreac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "sim.TRI(tri).reac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRI(tri).reac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).reac['fwd'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "sim.TRIS(triLst).reac['bkw'].Active = active", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Active\">active status</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">reac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "K": {"@doc": [{"@code": "sim.TRI(tri).sreac['fwd'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRI(tri).sreac['bkw'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).sreac['fwd'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}, {"@code": "sim.TRIS(triLst).sreac['bkw'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "Species": {"Amount": {"@doc": [{"@code": "sim.TRI(tri).spec.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).spec.Amount = a", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Amount\">amount</a> (in mol) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Clamped": {"@doc": [{"@code": "sim.TRI(tri).spec.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).spec.Clamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Clamped\">clamped status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Count": {"@doc": [{"@code": "sim.TRI(tri).spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "V": {"@doc": [{"@code": "sim.TRI(tri).V = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).V = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "VClamped": {"@doc": [{"@code": "sim.TRI(tri).VClamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).VClamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}, "Vertex": {"IClamp": {"@doc": [{"@code": "sim.VERT(vert).IClamp = i", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.IClamp\">current clamp</a> (in A) of <a href=\"API_geom.html#steps.API_2.geom.VertReference\">VertReference</a> <code class=\"py py-class\">vert</code>. "}, {"@code": "sim.VERTS(vertLst).IClamp = i", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.IClamp\">current clamp</a> (in A) of each vertex in <a href=\"API_geom.html#steps.API_2.geom.VertList\">VertList</a> <code class=\"py py-class\">vertLst</code>. "}]}, "V": {"@doc": [{"@code": "sim.VERT(vert).V = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of <a href=\"API_geom.html#steps.API_2.geom.VertReference\">VertReference</a> <code class=\"py py-class\">vert</code>. "}, {"@code": "sim.VERTS(vertLst).V = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.V\">potential</a> (in V) of each vertex in <a href=\"API_geom.html#steps.API_2.geom.VertList\">VertList</a> <code class=\"py py-class\">vertLst</code>. "}]}, "VClamped": {"@doc": [{"@code": "sim.VERT(vert).VClamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of <a href=\"API_geom.html#steps.API_2.geom.VertReference\">VertReference</a> <code class=\"py py-class\">vert</code>. "}, {"@code": "sim.VERTS(vertLst).VClamped = clamped", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.VClamped\">clamped status of potential</a> of each vertex in <a href=\"API_geom.html#steps.API_2.geom.VertList\">VertList</a> <code class=\"py py-class\">vertLst</code>. "}]}}, "Vesicle type": {"Reaction": {"K": {"@doc": [{"@code": "sim.ves.sreac['fwd'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_model.html#steps.API_2.model.Vesicle\">Vesicle</a>s of type <code class=\"py py-class\">ves</code>. "}, {"@code": "sim.ves.sreac['bkw'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_model.html#steps.API_2.model.Vesicle\">Vesicle</a>s of type <code class=\"py py-class\">ves</code>. "}]}}, "Link Species": {"SDiffD": {"@doc": [{"@code": "sim.ves('surf').linkspec.SDiffD = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.SDiffD\">surface diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.LinkSpecies\">LinkSpecies</a> <code class=\"py py-class\">linkspec</code> in the surfaces of <a href=\"API_model.html#steps.API_2.model.Vesicle\">Vesicle</a>s of type <code class=\"py py-class\">ves</code>. "}]}, "Diffusion": {"D": {"@doc": [{"@code": "sim.ves('surf').linkspec.sdiff.D = dcst", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.D\">diffusion constant</a> (in m\u00b2 s\u207b\u00b9) of <a href=\"API_model.html#steps.API_2.model.Diffusion\">Diffusion</a> <code class=\"py py-class\">diff</code> in <a href=\"API_model.html#steps.API_2.model.LinkSpecies\">LinkSpecies</a> <code class=\"py py-class\">linkspec</code> in the surfaces of <a href=\"API_model.html#steps.API_2.model.Vesicle\">Vesicle</a>s of type <code class=\"py py-class\">ves</code>. "}]}}}}}, "DistTetOpSplit": {"Compartment": {"Species": {"Conc": {"@doc": [{"@code": "sim.comp.spec.Conc = conc", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "sim.comp.spec.Conc = steps.utils.Params(conc, distributionMethod=DistributionMethod.MULTINOMIAL)", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. The distributing is weighted with the volume or area fraction of elements: bigger elements get a higher amount of molecules.\n         With <a href=\"API_sim.html#steps.API_2.sim.DistributionMethod.UNIFORM\">DistributionMethod.UNIFORM</a> (default), the distribution is deterministic (apart from roundings) and the number of\n         molecules per element is e.g. n*V_tet/V_tot.\n         With <a href=\"API_sim.html#steps.API_2.sim.DistributionMethod.MULTINOMIAL\">DistributionMethod.MULTINOMIAL</a> the distribution is multinomial and the probability of putting a species in an\n         element is e.g. V_tet/V_tot.\n         "}]}, "Count": {"@doc": [{"@code": "sim.comp.spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. "}, {"@code": "sim.comp.spec.Count = steps.utils.Params(n, distributionMethod=DistributionMethod.MULTINOMIAL)", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Compartment\">Compartment</a> <code class=\"py py-class\">comp</code>. The distributing is weighted with the volume or area fraction of elements: bigger elements get a higher amount of molecules.\n         With <a href=\"API_sim.html#steps.API_2.sim.DistributionMethod.UNIFORM\">DistributionMethod.UNIFORM</a> (default), the distribution is deterministic (apart from roundings) and the number of\n         molecules per element is e.g. n*V_tet/V_tot.\n         With <a href=\"API_sim.html#steps.API_2.sim.DistributionMethod.MULTINOMIAL\">DistributionMethod.MULTINOMIAL</a> the distribution is multinomial and the probability of putting a species in an\n         element is e.g. V_tet/V_tot.\n         "}]}}}, "Diff. Boundary": {"Species": {"DiffusionActive": {"@doc": [{"@code": "sim.diffb.spec.DiffusionActive = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.DiffusionActive\">diffusion active status</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.DiffBoundary\">DiffBoundary</a> <code class=\"py py-class\">diffb</code>. "}]}}}, "Membrane": {"IClamp": {"@doc": [{"@code": "sim.memb.IClamp = i", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.IClamp\">current clamp</a> (in A) of <a href=\"API_geom.html#steps.API_2.geom.Membrane\">Membrane</a> <code class=\"py py-class\">memb</code>. "}]}, "Potential": {"@doc": [{"@code": "sim.memb.Potential = val", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Potential\">potential</a> (in V) of <a href=\"API_geom.html#steps.API_2.geom.Membrane\">Membrane</a> <code class=\"py py-class\">memb</code>. "}]}, "Res": {"@doc": [{"@code": "sim.memb.Res = steps.utils.Params(ro, vrev)", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Res\">electrical resistivity</a> of <a href=\"API_geom.html#steps.API_2.geom.Membrane\">Membrane</a> <code class=\"py py-class\">memb</code>. "}]}}, "Patch": {"Reaction": {"K": {"@doc": [{"@code": "sim.patch.sreac['fwd'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the forward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "sim.patch.sreac['bkw'].K = kf", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.K\">reaction constant</a> of the backward part of <a href=\"API_model.html#steps.API_2.model.Reaction\">Reaction</a> <code class=\"py py-class\">sreac</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}]}}, "Species": {"Count": {"@doc": [{"@code": "sim.patch.spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. "}, {"@code": "sim.patch.spec.Count = steps.utils.Params(n, distributionMethod=DistributionMethod.MULTINOMIAL)", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.Patch\">Patch</a> <code class=\"py py-class\">patch</code>. The distributing is weighted with the volume or area fraction of elements: bigger elements get a higher amount of molecules.\n         With <a href=\"API_sim.html#steps.API_2.sim.DistributionMethod.UNIFORM\">DistributionMethod.UNIFORM</a> (default), the distribution is deterministic (apart from roundings) and the number of\n         molecules per element is e.g. n*V_tet/V_tot.\n         With <a href=\"API_sim.html#steps.API_2.sim.DistributionMethod.MULTINOMIAL\">DistributionMethod.MULTINOMIAL</a> the distribution is multinomial and the probability of putting a species in an\n         element is e.g. V_tet/V_tot.\n         "}]}}}, "Tetrahedron": {"Species": {"Conc": {"@doc": [{"@code": "sim.TET(tet).spec.Conc = conc", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).spec.Conc = conc", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Conc\">concentration</a> (in M) of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}, "Count": {"@doc": [{"@code": "sim.TET(tet).spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TetReference\">TetReference</a> <code class=\"py py-class\">tet</code>. "}, {"@code": "sim.TETS(tetLst).spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each tetrahedron in <a href=\"API_geom.html#steps.API_2.geom.TetList\">TetList</a> <code class=\"py py-class\">tetLst</code>. "}]}}}, "Triangle": {"Capac": {"@doc": [{"@code": "sim.TRI(tri).Capac = cap", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Capac\">capacitance</a> (in F m\u207b\u00b2) of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).Capac = cap", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Capac\">capacitance</a> (in F m\u207b\u00b2) of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Res": {"@doc": [{"@code": "sim.TRI(tri).Res = steps.utils.Params(ro, vrev)", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Res\">electrical resistivity</a> of <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).Res = steps.utils.Params(ro, vrev)", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Res\">electrical resistivity</a> of each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}, "Species": {"Count": {"@doc": [{"@code": "sim.TRI(tri).spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in <a href=\"API_geom.html#steps.API_2.geom.TriReference\">TriReference</a> <code class=\"py py-class\">tri</code>. "}, {"@code": "sim.TRIS(triLst).spec.Count = n", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.Count\">number</a> of <a href=\"API_model.html#steps.API_2.model.Species\">Species</a> <code class=\"py py-class\">spec</code> in each triangle in <a href=\"API_geom.html#steps.API_2.geom.TriList\">TriList</a> <code class=\"py py-class\">triLst</code>. "}]}}}, "Vertex": {"IClamp": {"@doc": [{"@code": "sim.VERT(vert).IClamp = i", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.IClamp\">current clamp</a> (in A) of <a href=\"API_geom.html#steps.API_2.geom.VertReference\">VertReference</a> <code class=\"py py-class\">vert</code>. "}, {"@code": "sim.VERTS(vertLst).IClamp = i", "@descr": "Set the <a href=\"#steps.API_2.sim.SimPath.IClamp\">current clamp</a> (in A) of each vertex in <a href=\"API_geom.html#steps.API_2.geom.VertList\">VertList</a> <code class=\"py py-class\">vertLst</code>. "}]}}}}}